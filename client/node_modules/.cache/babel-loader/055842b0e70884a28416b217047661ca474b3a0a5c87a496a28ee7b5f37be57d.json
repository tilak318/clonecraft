{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst lightTheme = {\n  primaryColor: '#007bff',\n  secondaryColor: '#6c757d',\n  backgroundColor: '#f8f9fa',\n  textColor: '#212529',\n  borderColor: '#dee2e6',\n  borderRadius: '8px',\n  boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n  successColor: '#28a745',\n  dangerColor: '#dc3545',\n  warningColor: '#ffc107',\n  infoColor: '#17a2b8',\n  lightColor: '#f8f9fa',\n  darkColor: '#343a40',\n  transition: 'all 0.3s ease-in-out'\n};\nconst darkTheme = {\n  ...lightTheme,\n  primaryColor: '#00ff8a',\n  // Electric Green\n  secondaryColor: '#a0a0a0',\n  backgroundColor: '#1a1a1a',\n  textColor: '#f0f0f0',\n  borderColor: '#333333',\n  boxShadow: '0 4px 8px rgba(0, 0, 0, 0.3)',\n  lightColor: '#2c2c2c',\n  darkColor: '#1a1a1a'\n};\nexport const useAppTheme = () => {\n  _s();\n  const [theme, setTheme] = useState('dark'); // Default to dark mode\n\n  const toggleTheme = () => {\n    setTheme(theme === 'light' ? 'dark' : 'light');\n  };\n  useEffect(() => {\n    // This could be used to save the theme to localStorage\n  }, [theme]);\n  return theme === 'light' ? lightTheme : darkTheme;\n};\n_s(useAppTheme, \"D0ekClnfIGVExrH5c3Ka+aWcxxE=\");","map":{"version":3,"names":["useState","useEffect","lightTheme","primaryColor","secondaryColor","backgroundColor","textColor","borderColor","borderRadius","boxShadow","successColor","dangerColor","warningColor","infoColor","lightColor","darkColor","transition","darkTheme","useAppTheme","_s","theme","setTheme","toggleTheme"],"sources":["E:/ResourcesSaverExt/website/client/src/hooks/useAppTheme.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst lightTheme = {\r\n  primaryColor: '#007bff',\r\n  secondaryColor: '#6c757d',\r\n  backgroundColor: '#f8f9fa',\r\n  textColor: '#212529',\r\n  borderColor: '#dee2e6',\r\n  borderRadius: '8px',\r\n  boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\r\n  successColor: '#28a745',\r\n  dangerColor: '#dc3545',\r\n  warningColor: '#ffc107',\r\n  infoColor: '#17a2b8',\r\n  lightColor: '#f8f9fa',\r\n  darkColor: '#343a40',\r\n  transition: 'all 0.3s ease-in-out',\r\n};\r\n\r\nconst darkTheme = {\r\n  ...lightTheme,\r\n  primaryColor: '#00ff8a', // Electric Green\r\n  secondaryColor: '#a0a0a0',\r\n  backgroundColor: '#1a1a1a',\r\n  textColor: '#f0f0f0',\r\n  borderColor: '#333333',\r\n  boxShadow: '0 4px 8px rgba(0, 0, 0, 0.3)',\r\n  lightColor: '#2c2c2c',\r\n  darkColor: '#1a1a1a',\r\n};\r\n\r\nexport const useAppTheme = () => {\r\n  const [theme, setTheme] = useState('dark'); // Default to dark mode\r\n\r\n  const toggleTheme = () => {\r\n    setTheme(theme === 'light' ? 'dark' : 'light');\r\n  };\r\n\r\n  useEffect(() => {\r\n    // This could be used to save the theme to localStorage\r\n  }, [theme]);\r\n\r\n  return theme === 'light' ? lightTheme : darkTheme;\r\n}; "],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,UAAU,GAAG;EACjBC,YAAY,EAAE,SAAS;EACvBC,cAAc,EAAE,SAAS;EACzBC,eAAe,EAAE,SAAS;EAC1BC,SAAS,EAAE,SAAS;EACpBC,WAAW,EAAE,SAAS;EACtBC,YAAY,EAAE,KAAK;EACnBC,SAAS,EAAE,8BAA8B;EACzCC,YAAY,EAAE,SAAS;EACvBC,WAAW,EAAE,SAAS;EACtBC,YAAY,EAAE,SAAS;EACvBC,SAAS,EAAE,SAAS;EACpBC,UAAU,EAAE,SAAS;EACrBC,SAAS,EAAE,SAAS;EACpBC,UAAU,EAAE;AACd,CAAC;AAED,MAAMC,SAAS,GAAG;EAChB,GAAGf,UAAU;EACbC,YAAY,EAAE,SAAS;EAAE;EACzBC,cAAc,EAAE,SAAS;EACzBC,eAAe,EAAE,SAAS;EAC1BC,SAAS,EAAE,SAAS;EACpBC,WAAW,EAAE,SAAS;EACtBE,SAAS,EAAE,8BAA8B;EACzCK,UAAU,EAAE,SAAS;EACrBC,SAAS,EAAE;AACb,CAAC;AAED,OAAO,MAAMG,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;;EAE5C,MAAMsB,WAAW,GAAGA,CAAA,KAAM;IACxBD,QAAQ,CAACD,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;EAChD,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACd;EAAA,CACD,EAAE,CAACmB,KAAK,CAAC,CAAC;EAEX,OAAOA,KAAK,KAAK,OAAO,GAAGlB,UAAU,GAAGe,SAAS;AACnD,CAAC;AAACE,EAAA,CAZWD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}