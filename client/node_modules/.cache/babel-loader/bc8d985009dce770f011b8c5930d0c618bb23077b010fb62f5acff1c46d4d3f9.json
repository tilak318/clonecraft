{"ast":null,"code":"var _jsxFileName = \"E:\\\\ResourcesSaverExt\\\\website\\\\client\\\\src\\\\components\\\\ConnectionTest.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { axiosConfig } from '../config/api';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestContainer = styled.div`\n  padding: 20px;\n  margin: 20px;\n  border: 2px solid ${props => props.status === 'success' ? '#4CAF50' : props.status === 'error' ? '#f44336' : '#2196F3'};\n  border-radius: 8px;\n  background: rgba(0, 0, 0, 0.1);\n`;\n_c = TestContainer;\nconst StatusText = styled.div`\n  font-weight: bold;\n  color: ${props => props.status === 'success' ? '#4CAF50' : props.status === 'error' ? '#f44336' : '#2196F3'};\n  margin-bottom: 10px;\n`;\n_c2 = StatusText;\nconst ConnectionTest = () => {\n  _s();\n  const [status, setStatus] = useState('testing');\n  const [message, setMessage] = useState('Testing connection...');\n  const [details, setDetails] = useState('');\n  useEffect(() => {\n    testConnection();\n  }, []);\n  const testConnection = async () => {\n    try {\n      setStatus('testing');\n      setMessage('Testing connection to backend...');\n\n      // Test 1: Health check endpoint\n      const healthResponse = await axios.get('/api/health', axiosConfig);\n      console.log('Health check response:', healthResponse.data);\n\n      // Test 2: Status endpoint\n      const statusResponse = await axios.get('/api/status', axiosConfig);\n      console.log('Status response:', statusResponse.data);\n      setStatus('success');\n      setMessage('✅ Connection successful!');\n      setDetails(`\n        Backend URL: ${axiosConfig.baseURL}\n        Health Status: ${healthResponse.data.status}\n        Scraper Status: ${statusResponse.data.services.scraper.browserOpen ? 'Browser Ready' : 'Browser Closed'}\n        Uptime: ${Math.round(statusResponse.data.system.uptime)}s\n      `);\n    } catch (error) {\n      var _error$response, _error$response2;\n      console.error('Connection test failed:', error);\n      setStatus('error');\n      setMessage('❌ Connection failed!');\n      setDetails(`\n        Error: ${error.message}\n        Status: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) || 'No response'}\n        Backend URL: ${axiosConfig.baseURL}\n        ${(_error$response2 = error.response) !== null && _error$response2 !== void 0 && _error$response2.data ? `Response: ${JSON.stringify(error.response.data, null, 2)}` : ''}\n      `);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(TestContainer, {\n    status: status,\n    children: [/*#__PURE__*/_jsxDEV(StatusText, {\n      status: status,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        whiteSpace: 'pre-line',\n        fontSize: '14px'\n      },\n      children: details\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: testConnection,\n      style: {\n        marginTop: '10px',\n        padding: '8px 16px',\n        backgroundColor: '#2196F3',\n        color: 'white',\n        border: 'none',\n        borderRadius: '4px',\n        cursor: 'pointer'\n      },\n      children: \"Test Again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(ConnectionTest, \"3NUhQ49096SVaXjDfBF33Bru/Tg=\");\n_c3 = ConnectionTest;\nexport default ConnectionTest;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TestContainer\");\n$RefreshReg$(_c2, \"StatusText\");\n$RefreshReg$(_c3, \"ConnectionTest\");","map":{"version":3,"names":["React","useState","useEffect","axios","axiosConfig","styled","jsxDEV","_jsxDEV","TestContainer","div","props","status","_c","StatusText","_c2","ConnectionTest","_s","setStatus","message","setMessage","details","setDetails","testConnection","healthResponse","get","console","log","data","statusResponse","baseURL","services","scraper","browserOpen","Math","round","system","uptime","error","_error$response","_error$response2","response","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","style","whiteSpace","fontSize","onClick","marginTop","padding","backgroundColor","color","border","borderRadius","cursor","_c3","$RefreshReg$"],"sources":["E:/ResourcesSaverExt/website/client/src/components/ConnectionTest.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { axiosConfig } from '../config/api';\r\nimport styled from 'styled-components';\r\n\r\nconst TestContainer = styled.div`\r\n  padding: 20px;\r\n  margin: 20px;\r\n  border: 2px solid ${props => props.status === 'success' ? '#4CAF50' : props.status === 'error' ? '#f44336' : '#2196F3'};\r\n  border-radius: 8px;\r\n  background: rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst StatusText = styled.div`\r\n  font-weight: bold;\r\n  color: ${props => props.status === 'success' ? '#4CAF50' : props.status === 'error' ? '#f44336' : '#2196F3'};\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst ConnectionTest = () => {\r\n  const [status, setStatus] = useState('testing');\r\n  const [message, setMessage] = useState('Testing connection...');\r\n  const [details, setDetails] = useState('');\r\n\r\n  useEffect(() => {\r\n    testConnection();\r\n  }, []);\r\n\r\n  const testConnection = async () => {\r\n    try {\r\n      setStatus('testing');\r\n      setMessage('Testing connection to backend...');\r\n      \r\n      // Test 1: Health check endpoint\r\n      const healthResponse = await axios.get('/api/health', axiosConfig);\r\n      console.log('Health check response:', healthResponse.data);\r\n      \r\n      // Test 2: Status endpoint\r\n      const statusResponse = await axios.get('/api/status', axiosConfig);\r\n      console.log('Status response:', statusResponse.data);\r\n      \r\n      setStatus('success');\r\n      setMessage('✅ Connection successful!');\r\n      setDetails(`\r\n        Backend URL: ${axiosConfig.baseURL}\r\n        Health Status: ${healthResponse.data.status}\r\n        Scraper Status: ${statusResponse.data.services.scraper.browserOpen ? 'Browser Ready' : 'Browser Closed'}\r\n        Uptime: ${Math.round(statusResponse.data.system.uptime)}s\r\n      `);\r\n      \r\n    } catch (error) {\r\n      console.error('Connection test failed:', error);\r\n      setStatus('error');\r\n      setMessage('❌ Connection failed!');\r\n      setDetails(`\r\n        Error: ${error.message}\r\n        Status: ${error.response?.status || 'No response'}\r\n        Backend URL: ${axiosConfig.baseURL}\r\n        ${error.response?.data ? `Response: ${JSON.stringify(error.response.data, null, 2)}` : ''}\r\n      `);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TestContainer status={status}>\r\n      <StatusText status={status}>{message}</StatusText>\r\n      <div style={{ whiteSpace: 'pre-line', fontSize: '14px' }}>\r\n        {details}\r\n      </div>\r\n      <button \r\n        onClick={testConnection}\r\n        style={{\r\n          marginTop: '10px',\r\n          padding: '8px 16px',\r\n          backgroundColor: '#2196F3',\r\n          color: 'white',\r\n          border: 'none',\r\n          borderRadius: '4px',\r\n          cursor: 'pointer'\r\n        }}\r\n      >\r\n        Test Again\r\n      </button>\r\n    </TestContainer>\r\n  );\r\n};\r\n\r\nexport default ConnectionTest; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}