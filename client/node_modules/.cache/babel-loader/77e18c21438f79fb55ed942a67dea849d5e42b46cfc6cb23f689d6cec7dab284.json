{"ast":null,"code":"export const MANAGE_ACTION_NAMES = {\n  ADD: 'ADD',\n  REMOVE: 'REMOVE',\n  REPLACE: 'REPLACE',\n  RESET: 'RESET'\n};\nexport const generateManageActions = (actionName, key) => {\n  return {\n    add: item => item && item[key] ? {\n      type: `${actionName}_${MANAGE_ACTION_NAMES.ADD}`,\n      payload: item\n    } : {},\n    remove: item => item && item[key] ? {\n      type: `${actionName}_${MANAGE_ACTION_NAMES.REMOVE}`,\n      payload: {\n        [key]: item[key]\n      }\n    } : {},\n    replace: (item, index, upsert) => item && index >= 0 ? {\n      type: `${actionName}_${MANAGE_ACTION_NAMES.REPLACE}`,\n      payload: {\n        index,\n        item,\n        upsert\n      }\n    } : {},\n    reset: () => ({\n      type: `${actionName}_${MANAGE_ACTION_NAMES.RESET}`\n    })\n  };\n};\nexport const generateManageReducer = (actionName, key, initialState = [], options = {}) => (state = initialState, action) => {\n  const {\n    type,\n    payload = {}\n  } = action;\n  const {\n    payloadMapper,\n    newPayloadMapper,\n    replacePayloadMapper\n  } = options;\n  const mappedPayload = payloadMapper ? payloadMapper(payload, state) : payload;\n  switch (type) {\n    case `${actionName}_${MANAGE_ACTION_NAMES.ADD}`:\n      {\n        const index = state.findIndex(item => item[key] === mappedPayload[key]);\n        if (index >= 0) {\n          // Replace\n          return [...state.slice(0, index), {\n            ...(replacePayloadMapper ? replacePayloadMapper(mappedPayload, state) : mappedPayload)\n          }, ...state.slice(index + 1)];\n        } else {\n          // Add New\n          return [...state, {\n            ...(newPayloadMapper ? newPayloadMapper(mappedPayload, state) : mappedPayload)\n          }];\n        }\n      }\n    case `${actionName}_${MANAGE_ACTION_NAMES.REMOVE}`:\n      {\n        const index = state.findIndex(item => item[key] === mappedPayload[key]);\n        if (index >= 0) {\n          // Remove\n          return [...state.slice(0, index), ...state.slice(index + 1)];\n        } else {\n          return state;\n        }\n      }\n    case `${actionName}_${MANAGE_ACTION_NAMES.REPLACE}`:\n      {\n        const {\n          index,\n          item,\n          upsert\n        } = payload;\n        const mappedPayload = payloadMapper ? payloadMapper(item, state) : item;\n        if (state[index] && state[index][key] !== item[key] || upsert) {\n          return [...state.slice(0, index), {\n            ...(replacePayloadMapper ? replacePayloadMapper(mappedPayload, state) : mappedPayload)\n          }, ...state.slice(index + 1)];\n        } else {\n          return state;\n        }\n      }\n    case `${actionName}_${MANAGE_ACTION_NAMES.RESET}`:\n      {\n        return [];\n      }\n    default:\n      {\n        return state;\n      }\n  }\n};\nexport const getReducerConfig = (stateKey, reducer) => ({\n  [stateKey]: reducer\n});","map":{"version":3,"names":["MANAGE_ACTION_NAMES","ADD","REMOVE","REPLACE","RESET","generateManageActions","actionName","key","add","item","type","payload","remove","replace","index","upsert","reset","generateManageReducer","initialState","options","state","action","payloadMapper","newPayloadMapper","replacePayloadMapper","mappedPayload","findIndex","slice","getReducerConfig","stateKey","reducer"],"sources":["E:/ResourcesSaverExt/website/client/src/store/utils.js"],"sourcesContent":["export const MANAGE_ACTION_NAMES = {\r\n  ADD: 'ADD',\r\n  REMOVE: 'REMOVE',\r\n  REPLACE: 'REPLACE',\r\n  RESET: 'RESET',\r\n};\r\n\r\nexport const generateManageActions = (actionName, key) => {\r\n  return {\r\n    add: (item) =>\r\n      item && item[key]\r\n        ? {\r\n            type: `${actionName}_${MANAGE_ACTION_NAMES.ADD}`,\r\n            payload: item,\r\n          }\r\n        : {},\r\n    remove: (item) =>\r\n      item && item[key]\r\n        ? {\r\n            type: `${actionName}_${MANAGE_ACTION_NAMES.REMOVE}`,\r\n            payload: {\r\n              [key]: item[key],\r\n            },\r\n          }\r\n        : {},\r\n    replace: (item, index, upsert) =>\r\n      item && index >= 0\r\n        ? {\r\n            type: `${actionName}_${MANAGE_ACTION_NAMES.REPLACE}`,\r\n            payload: {\r\n              index,\r\n              item,\r\n              upsert,\r\n            },\r\n          }\r\n        : {},\r\n    reset: () => ({\r\n      type: `${actionName}_${MANAGE_ACTION_NAMES.RESET}`,\r\n    }),\r\n  };\r\n};\r\n\r\nexport const generateManageReducer =\r\n  (actionName, key, initialState = [], options = {}) =>\r\n  (state = initialState, action) => {\r\n    const { type, payload = {} } = action;\r\n    const { payloadMapper, newPayloadMapper, replacePayloadMapper } = options;\r\n    const mappedPayload = payloadMapper ? payloadMapper(payload, state) : payload;\r\n    switch (type) {\r\n      case `${actionName}_${MANAGE_ACTION_NAMES.ADD}`: {\r\n        const index = state.findIndex((item) => item[key] === mappedPayload[key]);\r\n        if (index >= 0) {\r\n          // Replace\r\n          return [\r\n            ...state.slice(0, index),\r\n            { ...(replacePayloadMapper ? replacePayloadMapper(mappedPayload, state) : mappedPayload) },\r\n            ...state.slice(index + 1),\r\n          ];\r\n        } else {\r\n          // Add New\r\n          return [...state, { ...(newPayloadMapper ? newPayloadMapper(mappedPayload, state) : mappedPayload) }];\r\n        }\r\n      }\r\n      case `${actionName}_${MANAGE_ACTION_NAMES.REMOVE}`: {\r\n        const index = state.findIndex((item) => item[key] === mappedPayload[key]);\r\n        if (index >= 0) {\r\n          // Remove\r\n          return [...state.slice(0, index), ...state.slice(index + 1)];\r\n        } else {\r\n          return state;\r\n        }\r\n      }\r\n      case `${actionName}_${MANAGE_ACTION_NAMES.REPLACE}`: {\r\n        const { index, item, upsert } = payload;\r\n        const mappedPayload = payloadMapper ? payloadMapper(item, state) : item;\r\n        if ((state[index] && state[index][key] !== item[key]) || upsert) {\r\n          return [\r\n            ...state.slice(0, index),\r\n            { ...(replacePayloadMapper ? replacePayloadMapper(mappedPayload, state) : mappedPayload) },\r\n            ...state.slice(index + 1),\r\n          ];\r\n        } else {\r\n          return state;\r\n        }\r\n      }\r\n      case `${actionName}_${MANAGE_ACTION_NAMES.RESET}`: {\r\n        return [];\r\n      }\r\n      default: {\r\n        return state;\r\n      }\r\n    }\r\n  };\r\n\r\nexport const getReducerConfig = (stateKey, reducer) => ({\r\n  [stateKey]: reducer,\r\n}); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}