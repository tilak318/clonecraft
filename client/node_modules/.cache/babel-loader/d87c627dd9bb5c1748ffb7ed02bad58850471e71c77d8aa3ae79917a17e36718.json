{"ast":null,"code":"var _jsxFileName = \"E:\\\\ResourcesSaverExt\\\\website\\\\client\\\\src\\\\components\\\\DownloadList\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useReducer, useCallback } from 'react';\nimport styled from 'styled-components';\nimport Button from '../Button';\nimport { FaTrash, FaDownload, FaPlus, FaCog, FaInfoCircle, FaExclamationTriangle, FaCheckCircle } from 'react-icons/fa';\nimport axios from 'axios';\nimport { axiosConfig } from '../../config/api';\nimport useSimulatedProgress from '../../hooks/useSimulatedProgress';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GlassPanel = styled.div`\n  background: ${props => props.theme.backgroundColor};\n  backdrop-filter: blur(10px);\n  -webkit-backdrop-filter: blur(10px);\n  border-radius: ${props => props.theme.borderRadius};\n  border: 1px solid ${props => props.theme.borderColor};\n  box-shadow: ${props => props.theme.boxShadow};\n  overflow: hidden;\n`;\nconst DownloadListContainer = styled(GlassPanel)`\n  /* Inherits from GlassPanel */\n`;\n_c = DownloadListContainer;\nconst Section = styled.div`\n  padding: 25px;\n  border-bottom: 1px solid ${props => props.theme.borderColor};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst DownloadListHeader = styled.h2`\n  padding: 25px;\n  border-bottom: 1px solid ${props => props.theme.borderColor};\n  font-size: 20px;\n  font-weight: 600;\n  color: ${props => props.theme.textColor};\n  margin: 0;\n`;\n_c2 = DownloadListHeader;\nconst UrlInputSection = styled(Section)``;\n_c3 = UrlInputSection;\nconst UrlInput = styled.input`\n  width: 100%;\n  padding: 12px 16px;\n  border: 2px solid ${props => props.theme.borderColor};\n  border-radius: ${props => props.theme.borderRadius};\n  font-size: 16px;\n  transition: ${props => props.theme.transition};\n  background: rgba(0, 0, 0, 0.2);\n  color: ${props => props.theme.textColor};\n  \n  &:focus {\n    outline: none;\n    border-color: ${props => props.theme.primaryColor};\n  }\n`;\n_c4 = UrlInput;\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-top: 15px;\n  flex-wrap: wrap;\n  align-items: center;\n`;\n_c5 = ButtonGroup;\nconst DownloadListItems = styled.div`\n  max-height: 400px;\n  overflow-y: auto;\n`;\nconst DownloadListItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px 25px;\n  border-bottom: 1px solid ${props => props.theme.borderColor};\n  transition: ${props => props.theme.transition};\n  \n  &:hover {\n    background-color: ${props => props.theme.lightColor};\n  }\n  \n  &:last-child {\n    border-bottom: none;\n  }\n  \n  ${props => props.highlighted && `\n    background-color: ${props.theme.primaryColor}10;\n    border-left: 4px solid ${props.theme.primaryColor};\n  `}\n`;\nconst ItemUrl = styled.div`\n  flex: 1;\n  font-size: 16px;\n  color: ${props => props.theme.textColor};\n  word-break: break-all;\n`;\nconst ItemInfo = styled.div`\n  font-size: 12px;\n  color: ${props => props.theme.secondaryColor};\n  margin-top: 5px;\n`;\nconst ItemActions = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`;\nconst Spinner = styled.div`\n  width: 16px;\n  height: 16px;\n  border: 2px solid ${props => props.theme.borderColor};\n  border-top: 2px solid ${props => props.theme.primaryColor};\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n  \n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n_c6 = Spinner;\nconst OptionsSection = styled.div`\n  padding: 20px;\n  border-bottom: 1px solid ${props => props.theme.borderColor};\n`;\n_c7 = OptionsSection;\nconst OptionItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 10px;\n`;\n_c8 = OptionItem;\nconst OptionLabel = styled.label`\n  font-size: 14px;\n  color: ${props => props.theme.textColor};\n  cursor: pointer;\n`;\n_c9 = OptionLabel;\nconst Toggle = styled.input`\n  width: 40px;\n  height: 20px;\n  appearance: none;\n  background-color: ${props => props.theme.borderColor};\n  border-radius: 10px;\n  position: relative;\n  cursor: pointer;\n  transition: ${props => props.theme.transition};\n  \n  &:checked {\n    background-color: ${props => props.theme.primaryColor};\n  }\n  \n  &:before {\n    content: '';\n    position: absolute;\n    width: 16px;\n    height: 16px;\n    border-radius: 50%;\n    background-color: white;\n    top: 2px;\n    left: 2px;\n    transition: ${props => props.theme.transition};\n  }\n  \n  &:checked:before {\n    transform: translateX(20px);\n  }\n`;\n_c0 = Toggle;\nconst Message = styled.div`\n  padding: 15px 20px;\n  border-radius: ${props => props.theme.borderRadius};\n  margin: 20px 25px;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  border: 1px solid;\n`;\nconst ErrorMessage = styled(Message)`\n  background-color: rgba(255, 61, 113, 0.1);\n  border-color: ${props => props.theme.dangerColor};\n  color: ${props => props.theme.dangerColor};\n`;\n_c1 = ErrorMessage;\nconst SuccessMessage = styled(Message)`\n  background-color: rgba(0, 230, 118, 0.1);\n  border-color: ${props => props.theme.successColor};\n  color: ${props => props.theme.successColor};\n`;\nconst ProgressBar = styled.div`\n  width: 100%;\n  height: 8px;\n  background-color: ${props => props.theme.borderColor};\n  border-radius: 4px;\n  margin-top: 10px;\n  overflow: hidden;\n  \n  > div {\n    width: ${props => props.progress}%;\n    height: 100%;\n    background-color: ${props => props.theme.successColor};\n    transition: width 0.3s ease-in-out;\n  }\n`;\nconst DebugInfo = styled(GlassPanel)`\n  margin: 20px 25px;\n  padding: 20px 25px;\n`;\nconst DebugTitle = styled.h3`\n  font-size: 18px;\n  font-weight: 600;\n  color: ${props => props.theme.successColor};\n  margin: 0 0 15px 0;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n_c10 = DebugTitle;\nconst DebugGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 15px 25px;\n  margin-top: 20px;\n\n  @media (max-width: 576px) {\n    grid-template-columns: 1fr;\n  }\n`;\n_c11 = DebugGrid;\nconst DebugItem = styled.div``;\n_c12 = DebugItem;\nconst DebugKey = styled.div`\n  font-size: 14px;\n  font-weight: 500;\n  color: ${props => props.theme.secondaryColor};\n  margin-bottom: 5px;\n`;\n_c13 = DebugKey;\nconst DebugValue = styled.div`\n  font-size: 16px;\n  font-weight: 600;\n  color: ${props => props.theme.textColor};\n  word-break: break-all;\n`;\n_c14 = DebugValue;\nconst EmptyState = styled.div`\n  padding: 80px 25px;\n  text-align: center;\n  font-size: 16px;\n  color: ${props => props.theme.secondaryColor};\n`;\n_c15 = EmptyState;\nconst ScrapeReport = styled(GlassPanel)`\n  margin: 20px 25px;\n  padding: 20px 25px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 20px;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: stretch;\n  }\n`;\n_c16 = ScrapeReport;\nconst ReportDetails = styled.div`\n  flex-grow: 1;\n`;\n_c17 = ReportDetails;\nconst ReportActions = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  \n  & > button {\n    min-width: 200px;\n  }\n`;\n_c18 = ReportActions;\nconst DownloadList = () => {\n  _s();\n  const [url, setUrl] = useState('');\n  const [isScraping, setIsScraping] = useState(false);\n  const [scrapeResult, setScrapeResult] = useState(null);\n  const [error, setError] = useState('');\n  const [isDownloading, setIsDownloading] = useState(false);\n  const [downloadProgress, setDownloadProgress] = useSimulatedProgress(isDownloading);\n  const [options, setOptions] = useState({\n    ignoreNoContentFile: true,\n    beautifyFile: true\n  });\n  const [isTesting, setIsTesting] = useState(false);\n  const [testResults, setTestResults] = useState(null);\n  const handleAddUrl = useCallback(async () => {\n    if (!url.trim()) return;\n    setIsScraping(true);\n    setError('');\n    setScrapeResult(null);\n    try {\n      console.log('🚀 Starting scrape request...');\n      console.log('📍 URL:', url.trim());\n      console.log('⚙️ Options:', options);\n      console.log('🌐 API Base URL:', axiosConfig.baseURL);\n      const response = await axios.post('/api/scrape-debug', {\n        url: url.trim(),\n        options\n      }, axiosConfig);\n      console.log('✅ Scrape response received:', response.data);\n      if (response.data.success) {\n        setScrapeResult({\n          url: response.data.url,\n          resources: response.data.resources,\n          debug: response.data.debug,\n          requestId: response.data.requestId,\n          serverTime: response.data.serverTime\n        });\n        setUrl('');\n      } else {\n        throw new Error(response.data.error || 'Unknown error occurred');\n      }\n    } catch (error) {\n      console.error('❌ Scraping error:', error);\n      let errorMessage = 'Failed to scrape website. Please check the URL and try again.';\n      let errorDetails = '';\n      if (error.response) {\n        // Server responded with error status\n        console.error('📊 Server error response:', error.response.data);\n        const serverError = error.response.data;\n        errorMessage = serverError.error || errorMessage;\n        if (serverError.debug) {\n          var _serverError$debug$me;\n          errorDetails = `Server Details:\n- Environment: ${serverError.debug.environment}\n- Memory Usage: ${Math.round(((_serverError$debug$me = serverError.debug.memoryUsage) === null || _serverError$debug$me === void 0 ? void 0 : _serverError$debug$me.heapUsed) / 1024 / 1024)}MB\n- Uptime: ${Math.round(serverError.debug.uptime)}s\n- Request ID: ${serverError.requestId}\n- Server Time: ${serverError.serverTime}ms`;\n        }\n        if (serverError.stack && process.env.NODE_ENV === 'development') {\n          errorDetails += `\\n\\nStack Trace:\\n${serverError.stack}`;\n        }\n      } else if (error.request) {\n        var _error$config, _error$config2, _error$config3;\n        // Request was made but no response received\n        console.error('📡 Network error - no response received');\n        errorMessage = 'Network error: No response from server. Please check your connection and try again.';\n        errorDetails = `Network Details:\n- Request made to: ${(_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url}\n- Method: ${(_error$config2 = error.config) === null || _error$config2 === void 0 ? void 0 : _error$config2.method}\n- Timeout: ${(_error$config3 = error.config) === null || _error$config3 === void 0 ? void 0 : _error$config3.timeout}ms`;\n      } else {\n        // Something else happened\n        console.error('🔧 Other error:', error.message);\n        errorMessage = `Error: ${error.message}`;\n      }\n\n      // Log detailed error information\n      console.error('📋 Error Summary:', {\n        message: errorMessage,\n        details: errorDetails,\n        originalError: error\n      });\n      setError(`${errorMessage}${errorDetails ? '\\n\\n' + errorDetails : ''}`);\n    } finally {\n      setIsScraping(false);\n    }\n  }, [url, options]);\n  const handleDownload = useCallback(async item => {\n    setIsDownloading(true);\n    try {\n      console.log('📦 Starting download...');\n      console.log('📊 Resources:', item.resources.length);\n      console.log('⚙️ Options:', options);\n      const response = await axios.post('/api/download', {\n        resources: item.resources,\n        options\n      }, {\n        ...axiosConfig,\n        responseType: 'blob',\n        timeout: 120000 // 2 minutes for large files\n      });\n      console.log('✅ Download response received');\n      console.log('📏 Response size:', response.data.size, 'bytes');\n      console.log('📋 Headers:', response.headers);\n      setDownloadProgress(100);\n\n      // Create download link\n      const blob = new Blob([response.data]);\n      const downloadUrl = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = downloadUrl;\n      link.download = `${new URL(item.url).hostname}.zip`;\n      document.body.appendChild(link);\n      link.click();\n      window.URL.revokeObjectURL(downloadUrl);\n      link.remove();\n      console.log('✅ Download completed successfully');\n    } catch (error) {\n      console.error('❌ Download error:', error);\n      let errorMessage = 'Failed to download file. Please try again.';\n      let errorDetails = '';\n      if (error.response) {\n        console.error('📊 Server download error:', error.response.data);\n\n        // Try to parse error response\n        if (error.response.data instanceof Blob) {\n          // Convert blob to text to read error message\n          const reader = new FileReader();\n          reader.onload = () => {\n            try {\n              const errorData = JSON.parse(reader.result);\n              console.error('📋 Parsed error data:', errorData);\n              setError(`Download failed: ${errorData.error || 'Unknown server error'}`);\n            } catch (parseError) {\n              console.error('❌ Failed to parse error response:', parseError);\n              setError('Download failed: Invalid server response');\n            }\n          };\n          reader.readAsText(error.response.data);\n        } else {\n          errorMessage = error.response.data.error || errorMessage;\n          if (error.response.data.debug) {\n            var _error$response$data$;\n            errorDetails = `Server Details:\n- Environment: ${error.response.data.debug.environment}\n- Memory Usage: ${Math.round(((_error$response$data$ = error.response.data.debug.memoryUsage) === null || _error$response$data$ === void 0 ? void 0 : _error$response$data$.heapUsed) / 1024 / 1024)}MB\n- Request ID: ${error.response.data.requestId}\n- Server Time: ${error.response.data.serverTime}ms`;\n          }\n          setError(`${errorMessage}${errorDetails ? '\\n\\n' + errorDetails : ''}`);\n        }\n      } else if (error.request) {\n        console.error('📡 Network error during download');\n        setError('Network error during download. Please check your connection and try again.');\n      } else {\n        console.error('🔧 Other download error:', error.message);\n        setError(`Download error: ${error.message}`);\n      }\n    } finally {\n      setTimeout(() => {\n        setIsDownloading(false);\n      }, 500);\n    }\n  }, [options, setDownloadProgress]);\n  const handleOptionChange = useCallback((key, value) => {\n    setOptions(prev => ({\n      ...prev,\n      [key]: value\n    }));\n  }, []);\n  const formatFileSize = bytes => {\n    if (!bytes || bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  // Test environment function\n  const testEnvironment = useCallback(async () => {\n    setIsTesting(true);\n    setError('');\n    setTestResults(null);\n    try {\n      console.log('🧪 Testing environment...');\n\n      // Test environment endpoint\n      const envResponse = await axios.get('/api/test-environment', axiosConfig);\n      console.log('✅ Environment test response:', envResponse.data);\n\n      // Test simple scrape\n      const scrapeResponse = await axios.get('/api/test-scrape/example.com', axiosConfig);\n      console.log('✅ Test scrape response:', scrapeResponse.data);\n      setTestResults({\n        environment: envResponse.data,\n        scrape: scrapeResponse.data\n      });\n    } catch (error) {\n      console.error('❌ Environment test failed:', error);\n      let errorMessage = 'Environment test failed.';\n      let errorDetails = '';\n      if (error.response) {\n        console.error('📊 Server test error:', error.response.data);\n        errorMessage = error.response.data.error || errorMessage;\n        if (error.response.data.debug) {\n          var _error$response$data$2;\n          errorDetails = `Test Details:\n- Environment: ${error.response.data.debug.environment}\n- Memory Usage: ${Math.round(((_error$response$data$2 = error.response.data.debug.memoryUsage) === null || _error$response$data$2 === void 0 ? void 0 : _error$response$data$2.heapUsed) / 1024 / 1024)}MB\n- Request ID: ${error.response.data.requestId}\n- Server Time: ${error.response.data.serverTime}ms`;\n        }\n      } else if (error.request) {\n        var _error$config4, _error$config5;\n        errorMessage = 'Network error during test. Please check your connection.';\n        errorDetails = `Network Details:\n- Request made to: ${(_error$config4 = error.config) === null || _error$config4 === void 0 ? void 0 : _error$config4.url}\n- Method: ${(_error$config5 = error.config) === null || _error$config5 === void 0 ? void 0 : _error$config5.method}`;\n      } else {\n        errorMessage = `Test error: ${error.message}`;\n      }\n      setError(`${errorMessage}${errorDetails ? '\\n\\n' + errorDetails : ''}`);\n    } finally {\n      setIsTesting(false);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DownloadListContainer, {\n    children: [/*#__PURE__*/_jsxDEV(DownloadListHeader, {\n      children: \"Download List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OptionsSection, {\n      children: [/*#__PURE__*/_jsxDEV(OptionItem, {\n        children: [/*#__PURE__*/_jsxDEV(OptionLabel, {\n          children: \"Ignore files with no content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Toggle, {\n          type: \"checkbox\",\n          checked: options.ignoreNoContentFile,\n          onChange: e => handleOptionChange('ignoreNoContentFile', e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OptionItem, {\n        children: [/*#__PURE__*/_jsxDEV(OptionLabel, {\n          htmlFor: \"beautifyFile\",\n          children: \"Beautify files (HTML, CSS, JS, JSON)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Toggle, {\n          id: \"beautifyFile\",\n          type: \"checkbox\",\n          checked: options.beautifyFile,\n          onChange: e => handleOptionChange('beautifyFile', e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UrlInputSection, {\n      children: [/*#__PURE__*/_jsxDEV(UrlInput, {\n        type: \"url\",\n        placeholder: \"Enter website URL (e.g., https://example.com)\",\n        value: url,\n        onChange: e => setUrl(e.target.value),\n        onKeyPress: e => e.key === 'Enter' && handleAddUrl(),\n        disabled: isScraping\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAddUrl,\n          disabled: isScraping || !url.trim(),\n          color: \"primary\",\n          children: isScraping ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 17\n            }, this), \" Scraping...\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(FaPlus, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 17\n            }, this), \" Add URL\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: [/*#__PURE__*/_jsxDEV(FaExclamationTriangle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 13\n        }, this), \" \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 11\n      }, this), scrapeResult && /*#__PURE__*/_jsxDEV(ScrapeReport, {\n        children: [/*#__PURE__*/_jsxDEV(ReportDetails, {\n          children: [/*#__PURE__*/_jsxDEV(DebugTitle, {\n            children: [/*#__PURE__*/_jsxDEV(FaCheckCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 17\n            }, this), \" Scrape Successful\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DebugItem, {\n            style: {\n              marginBottom: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(DebugKey, {\n              children: \"URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DebugValue, {\n              children: scrapeResult.url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DebugGrid, {\n            children: [/*#__PURE__*/_jsxDEV(DebugItem, {\n              children: [/*#__PURE__*/_jsxDEV(DebugKey, {\n                children: \"Total Resources\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 606,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(DebugValue, {\n                children: scrapeResult.debug.totalResources\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 607,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DebugItem, {\n              children: [/*#__PURE__*/_jsxDEV(DebugKey, {\n                children: \"Total Size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 610,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(DebugValue, {\n                children: formatFileSize(scrapeResult.debug.totalSize)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 611,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DebugItem, {\n              children: [/*#__PURE__*/_jsxDEV(DebugKey, {\n                children: \"Scrape Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 614,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(DebugValue, {\n                children: [scrapeResult.debug.scrapeTime, \"ms\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 615,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DebugItem, {\n              children: [/*#__PURE__*/_jsxDEV(DebugKey, {\n                children: \"Unique Domains\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 618,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(DebugValue, {\n                children: scrapeResult.debug.uniqueDomains\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 619,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ReportActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleDownload(scrapeResult),\n            disabled: isDownloading,\n            color: \"primary\",\n            progress: isDownloading ? downloadProgress : 0,\n            children: isDownloading ? `Downloading... ${downloadProgress}%` : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(FaDownload, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 633,\n                columnNumber: 21\n              }, this), \" Download\"]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setScrapeResult(null),\n            color: \"danger\",\n            children: [/*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 17\n            }, this), \" Delete\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 636,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 7\n    }, this), !scrapeResult && /*#__PURE__*/_jsxDEV(EmptyState, {\n      children: \"No results yet. Enter a URL above to start scraping.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 545,\n    columnNumber: 5\n  }, this);\n};\n_s(DownloadList, \"/H53PlBWT74N1UdLNf8yaPymKBs=\", false, function () {\n  return [useSimulatedProgress];\n});\n_c19 = DownloadList;\nexport default DownloadList;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19;\n$RefreshReg$(_c, \"DownloadListContainer\");\n$RefreshReg$(_c2, \"DownloadListHeader\");\n$RefreshReg$(_c3, \"UrlInputSection\");\n$RefreshReg$(_c4, \"UrlInput\");\n$RefreshReg$(_c5, \"ButtonGroup\");\n$RefreshReg$(_c6, \"Spinner\");\n$RefreshReg$(_c7, \"OptionsSection\");\n$RefreshReg$(_c8, \"OptionItem\");\n$RefreshReg$(_c9, \"OptionLabel\");\n$RefreshReg$(_c0, \"Toggle\");\n$RefreshReg$(_c1, \"ErrorMessage\");\n$RefreshReg$(_c10, \"DebugTitle\");\n$RefreshReg$(_c11, \"DebugGrid\");\n$RefreshReg$(_c12, \"DebugItem\");\n$RefreshReg$(_c13, \"DebugKey\");\n$RefreshReg$(_c14, \"DebugValue\");\n$RefreshReg$(_c15, \"EmptyState\");\n$RefreshReg$(_c16, \"ScrapeReport\");\n$RefreshReg$(_c17, \"ReportDetails\");\n$RefreshReg$(_c18, \"ReportActions\");\n$RefreshReg$(_c19, \"DownloadList\");","map":{"version":3,"names":["React","useState","useReducer","useCallback","styled","Button","FaTrash","FaDownload","FaPlus","FaCog","FaInfoCircle","FaExclamationTriangle","FaCheckCircle","axios","axiosConfig","useSimulatedProgress","jsxDEV","_jsxDEV","Fragment","_Fragment","GlassPanel","div","props","theme","backgroundColor","borderRadius","borderColor","boxShadow","DownloadListContainer","_c","Section","DownloadListHeader","h2","textColor","_c2","UrlInputSection","_c3","UrlInput","input","transition","primaryColor","_c4","ButtonGroup","_c5","DownloadListItems","DownloadListItem","lightColor","highlighted","ItemUrl","ItemInfo","secondaryColor","ItemActions","Spinner","_c6","OptionsSection","_c7","OptionItem","_c8","OptionLabel","label","_c9","Toggle","_c0","Message","ErrorMessage","dangerColor","_c1","SuccessMessage","successColor","ProgressBar","progress","DebugInfo","DebugTitle","h3","_c10","DebugGrid","_c11","DebugItem","_c12","DebugKey","_c13","DebugValue","_c14","EmptyState","_c15","ScrapeReport","_c16","ReportDetails","_c17","ReportActions","_c18","DownloadList","_s","url","setUrl","isScraping","setIsScraping","scrapeResult","setScrapeResult","error","setError","isDownloading","setIsDownloading","downloadProgress","setDownloadProgress","options","setOptions","ignoreNoContentFile","beautifyFile","isTesting","setIsTesting","testResults","setTestResults","handleAddUrl","trim","console","log","baseURL","response","post","data","success","resources","debug","requestId","serverTime","Error","errorMessage","errorDetails","serverError","_serverError$debug$me","environment","Math","round","memoryUsage","heapUsed","uptime","stack","process","env","NODE_ENV","request","_error$config","_error$config2","_error$config3","config","method","timeout","message","details","originalError","handleDownload","item","length","responseType","size","headers","blob","Blob","downloadUrl","window","URL","createObjectURL","link","document","createElement","href","download","hostname","body","appendChild","click","revokeObjectURL","remove","reader","FileReader","onload","errorData","JSON","parse","result","parseError","readAsText","_error$response$data$","setTimeout","handleOptionChange","key","value","prev","formatFileSize","bytes","k","sizes","i","floor","parseFloat","pow","toFixed","testEnvironment","envResponse","get","scrapeResponse","scrape","_error$response$data$2","_error$config4","_error$config5","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","e","target","htmlFor","id","placeholder","onKeyPress","disabled","onClick","color","style","marginBottom","totalResources","totalSize","scrapeTime","uniqueDomains","_c19","$RefreshReg$"],"sources":["E:/ResourcesSaverExt/website/client/src/components/DownloadList/index.js"],"sourcesContent":["import React, { useState, useReducer, useCallback } from 'react';\nimport styled from 'styled-components';\nimport Button from '../Button';\nimport { FaTrash, FaDownload, FaPlus, FaCog, FaInfoCircle, FaExclamationTriangle, FaCheckCircle } from 'react-icons/fa';\nimport axios from 'axios';\nimport { axiosConfig } from '../../config/api';\nimport useSimulatedProgress from '../../hooks/useSimulatedProgress';\n\nconst GlassPanel = styled.div`\n  background: ${props => props.theme.backgroundColor};\n  backdrop-filter: blur(10px);\n  -webkit-backdrop-filter: blur(10px);\n  border-radius: ${props => props.theme.borderRadius};\n  border: 1px solid ${props => props.theme.borderColor};\n  box-shadow: ${props => props.theme.boxShadow};\n  overflow: hidden;\n`;\n\nconst DownloadListContainer = styled(GlassPanel)`\n  /* Inherits from GlassPanel */\n`;\n\nconst Section = styled.div`\n  padding: 25px;\n  border-bottom: 1px solid ${props => props.theme.borderColor};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst DownloadListHeader = styled.h2`\n  padding: 25px;\n  border-bottom: 1px solid ${props => props.theme.borderColor};\n  font-size: 20px;\n  font-weight: 600;\n  color: ${props => props.theme.textColor};\n  margin: 0;\n`;\n\nconst UrlInputSection = styled(Section)``;\n\nconst UrlInput = styled.input`\n  width: 100%;\n  padding: 12px 16px;\n  border: 2px solid ${props => props.theme.borderColor};\n  border-radius: ${props => props.theme.borderRadius};\n  font-size: 16px;\n  transition: ${props => props.theme.transition};\n  background: rgba(0, 0, 0, 0.2);\n  color: ${props => props.theme.textColor};\n  \n  &:focus {\n    outline: none;\n    border-color: ${props => props.theme.primaryColor};\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-top: 15px;\n  flex-wrap: wrap;\n  align-items: center;\n`;\n\nconst DownloadListItems = styled.div`\n  max-height: 400px;\n  overflow-y: auto;\n`;\n\nconst DownloadListItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px 25px;\n  border-bottom: 1px solid ${props => props.theme.borderColor};\n  transition: ${props => props.theme.transition};\n  \n  &:hover {\n    background-color: ${props => props.theme.lightColor};\n  }\n  \n  &:last-child {\n    border-bottom: none;\n  }\n  \n  ${props => props.highlighted && `\n    background-color: ${props.theme.primaryColor}10;\n    border-left: 4px solid ${props.theme.primaryColor};\n  `}\n`;\n\nconst ItemUrl = styled.div`\n  flex: 1;\n  font-size: 16px;\n  color: ${props => props.theme.textColor};\n  word-break: break-all;\n`;\n\nconst ItemInfo = styled.div`\n  font-size: 12px;\n  color: ${props => props.theme.secondaryColor};\n  margin-top: 5px;\n`;\n\nconst ItemActions = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`;\n\nconst Spinner = styled.div`\n  width: 16px;\n  height: 16px;\n  border: 2px solid ${props => props.theme.borderColor};\n  border-top: 2px solid ${props => props.theme.primaryColor};\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n  \n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n\nconst OptionsSection = styled.div`\n  padding: 20px;\n  border-bottom: 1px solid ${props => props.theme.borderColor};\n`;\n\nconst OptionItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 10px;\n`;\n\nconst OptionLabel = styled.label`\n  font-size: 14px;\n  color: ${props => props.theme.textColor};\n  cursor: pointer;\n`;\n\nconst Toggle = styled.input`\n  width: 40px;\n  height: 20px;\n  appearance: none;\n  background-color: ${props => props.theme.borderColor};\n  border-radius: 10px;\n  position: relative;\n  cursor: pointer;\n  transition: ${props => props.theme.transition};\n  \n  &:checked {\n    background-color: ${props => props.theme.primaryColor};\n  }\n  \n  &:before {\n    content: '';\n    position: absolute;\n    width: 16px;\n    height: 16px;\n    border-radius: 50%;\n    background-color: white;\n    top: 2px;\n    left: 2px;\n    transition: ${props => props.theme.transition};\n  }\n  \n  &:checked:before {\n    transform: translateX(20px);\n  }\n`;\n\nconst Message = styled.div`\n  padding: 15px 20px;\n  border-radius: ${props => props.theme.borderRadius};\n  margin: 20px 25px;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  border: 1px solid;\n`;\n\nconst ErrorMessage = styled(Message)`\n  background-color: rgba(255, 61, 113, 0.1);\n  border-color: ${props => props.theme.dangerColor};\n  color: ${props => props.theme.dangerColor};\n`;\n\nconst SuccessMessage = styled(Message)`\n  background-color: rgba(0, 230, 118, 0.1);\n  border-color: ${props => props.theme.successColor};\n  color: ${props => props.theme.successColor};\n`;\n\nconst ProgressBar = styled.div`\n  width: 100%;\n  height: 8px;\n  background-color: ${props => props.theme.borderColor};\n  border-radius: 4px;\n  margin-top: 10px;\n  overflow: hidden;\n  \n  > div {\n    width: ${props => props.progress}%;\n    height: 100%;\n    background-color: ${props => props.theme.successColor};\n    transition: width 0.3s ease-in-out;\n  }\n`;\n\nconst DebugInfo = styled(GlassPanel)`\n  margin: 20px 25px;\n  padding: 20px 25px;\n`;\n\nconst DebugTitle = styled.h3`\n  font-size: 18px;\n  font-weight: 600;\n  color: ${props => props.theme.successColor};\n  margin: 0 0 15px 0;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n\nconst DebugGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 15px 25px;\n  margin-top: 20px;\n\n  @media (max-width: 576px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst DebugItem = styled.div``;\n\nconst DebugKey = styled.div`\n  font-size: 14px;\n  font-weight: 500;\n  color: ${props => props.theme.secondaryColor};\n  margin-bottom: 5px;\n`;\n\nconst DebugValue = styled.div`\n  font-size: 16px;\n  font-weight: 600;\n  color: ${props => props.theme.textColor};\n  word-break: break-all;\n`;\n\nconst EmptyState = styled.div`\n  padding: 80px 25px;\n  text-align: center;\n  font-size: 16px;\n  color: ${props => props.theme.secondaryColor};\n`;\n\nconst ScrapeReport = styled(GlassPanel)`\n  margin: 20px 25px;\n  padding: 20px 25px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 20px;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: stretch;\n  }\n`;\n\nconst ReportDetails = styled.div`\n  flex-grow: 1;\n`;\n\nconst ReportActions = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  \n  & > button {\n    min-width: 200px;\n  }\n`;\n\nconst DownloadList = () => {\n  const [url, setUrl] = useState('');\n  const [isScraping, setIsScraping] = useState(false);\n  const [scrapeResult, setScrapeResult] = useState(null);\n  const [error, setError] = useState('');\n  const [isDownloading, setIsDownloading] = useState(false);\n  const [downloadProgress, setDownloadProgress] = useSimulatedProgress(isDownloading);\n  const [options, setOptions] = useState({\n    ignoreNoContentFile: true,\n    beautifyFile: true,\n  });\n  const [isTesting, setIsTesting] = useState(false);\n  const [testResults, setTestResults] = useState(null);\n\n  const handleAddUrl = useCallback(async () => {\n    if (!url.trim()) return;\n    \n    setIsScraping(true);\n    setError('');\n    setScrapeResult(null);\n    \n    try {\n      console.log('🚀 Starting scrape request...');\n      console.log('📍 URL:', url.trim());\n      console.log('⚙️ Options:', options);\n      console.log('🌐 API Base URL:', axiosConfig.baseURL);\n      \n      const response = await axios.post('/api/scrape-debug', {\n        url: url.trim(),\n        options\n      }, axiosConfig);\n      \n      console.log('✅ Scrape response received:', response.data);\n      \n      if (response.data.success) {\n        setScrapeResult({\n          url: response.data.url,\n          resources: response.data.resources,\n          debug: response.data.debug,\n          requestId: response.data.requestId,\n          serverTime: response.data.serverTime\n        });\n        setUrl('');\n      } else {\n        throw new Error(response.data.error || 'Unknown error occurred');\n      }\n    } catch (error) {\n      console.error('❌ Scraping error:', error);\n      \n      let errorMessage = 'Failed to scrape website. Please check the URL and try again.';\n      let errorDetails = '';\n      \n      if (error.response) {\n        // Server responded with error status\n        console.error('📊 Server error response:', error.response.data);\n        const serverError = error.response.data;\n        \n        errorMessage = serverError.error || errorMessage;\n        \n        if (serverError.debug) {\n          errorDetails = `Server Details:\n- Environment: ${serverError.debug.environment}\n- Memory Usage: ${Math.round(serverError.debug.memoryUsage?.heapUsed / 1024 / 1024)}MB\n- Uptime: ${Math.round(serverError.debug.uptime)}s\n- Request ID: ${serverError.requestId}\n- Server Time: ${serverError.serverTime}ms`;\n        }\n        \n        if (serverError.stack && process.env.NODE_ENV === 'development') {\n          errorDetails += `\\n\\nStack Trace:\\n${serverError.stack}`;\n        }\n        \n      } else if (error.request) {\n        // Request was made but no response received\n        console.error('📡 Network error - no response received');\n        errorMessage = 'Network error: No response from server. Please check your connection and try again.';\n        errorDetails = `Network Details:\n- Request made to: ${error.config?.url}\n- Method: ${error.config?.method}\n- Timeout: ${error.config?.timeout}ms`;\n        \n      } else {\n        // Something else happened\n        console.error('🔧 Other error:', error.message);\n        errorMessage = `Error: ${error.message}`;\n      }\n      \n      // Log detailed error information\n      console.error('📋 Error Summary:', {\n        message: errorMessage,\n        details: errorDetails,\n        originalError: error\n      });\n      \n      setError(`${errorMessage}${errorDetails ? '\\n\\n' + errorDetails : ''}`);\n    } finally {\n      setIsScraping(false);\n    }\n  }, [url, options]);\n\n  const handleDownload = useCallback(async (item) => {\n    setIsDownloading(true);\n    try {\n      console.log('📦 Starting download...');\n      console.log('📊 Resources:', item.resources.length);\n      console.log('⚙️ Options:', options);\n      \n      const response = await axios.post('/api/download', {\n        resources: item.resources,\n        options\n      }, {\n        ...axiosConfig,\n        responseType: 'blob',\n        timeout: 120000 // 2 minutes for large files\n      });\n      \n      console.log('✅ Download response received');\n      console.log('📏 Response size:', response.data.size, 'bytes');\n      console.log('📋 Headers:', response.headers);\n      \n      setDownloadProgress(100);\n      \n      // Create download link\n      const blob = new Blob([response.data]);\n      const downloadUrl = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = downloadUrl;\n      link.download = `${new URL(item.url).hostname}.zip`;\n      document.body.appendChild(link);\n      link.click();\n      window.URL.revokeObjectURL(downloadUrl);\n      link.remove();\n      \n      console.log('✅ Download completed successfully');\n      \n    } catch (error) {\n      console.error('❌ Download error:', error);\n      \n      let errorMessage = 'Failed to download file. Please try again.';\n      let errorDetails = '';\n      \n      if (error.response) {\n        console.error('📊 Server download error:', error.response.data);\n        \n        // Try to parse error response\n        if (error.response.data instanceof Blob) {\n          // Convert blob to text to read error message\n          const reader = new FileReader();\n          reader.onload = () => {\n            try {\n              const errorData = JSON.parse(reader.result);\n              console.error('📋 Parsed error data:', errorData);\n              setError(`Download failed: ${errorData.error || 'Unknown server error'}`);\n            } catch (parseError) {\n              console.error('❌ Failed to parse error response:', parseError);\n              setError('Download failed: Invalid server response');\n            }\n          };\n          reader.readAsText(error.response.data);\n        } else {\n          errorMessage = error.response.data.error || errorMessage;\n          if (error.response.data.debug) {\n            errorDetails = `Server Details:\n- Environment: ${error.response.data.debug.environment}\n- Memory Usage: ${Math.round(error.response.data.debug.memoryUsage?.heapUsed / 1024 / 1024)}MB\n- Request ID: ${error.response.data.requestId}\n- Server Time: ${error.response.data.serverTime}ms`;\n          }\n          setError(`${errorMessage}${errorDetails ? '\\n\\n' + errorDetails : ''}`);\n        }\n        \n      } else if (error.request) {\n        console.error('📡 Network error during download');\n        setError('Network error during download. Please check your connection and try again.');\n        \n      } else {\n        console.error('🔧 Other download error:', error.message);\n        setError(`Download error: ${error.message}`);\n      }\n    } finally {\n      setTimeout(() => {\n        setIsDownloading(false);\n      }, 500);\n    }\n  }, [options, setDownloadProgress]);\n\n  const handleOptionChange = useCallback((key, value) => {\n    setOptions(prev => ({ ...prev, [key]: value }));\n  }, []);\n\n  const formatFileSize = (bytes) => {\n    if (!bytes || bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  // Test environment function\n  const testEnvironment = useCallback(async () => {\n    setIsTesting(true);\n    setError('');\n    setTestResults(null);\n    \n    try {\n      console.log('🧪 Testing environment...');\n      \n      // Test environment endpoint\n      const envResponse = await axios.get('/api/test-environment', axiosConfig);\n      console.log('✅ Environment test response:', envResponse.data);\n      \n      // Test simple scrape\n      const scrapeResponse = await axios.get('/api/test-scrape/example.com', axiosConfig);\n      console.log('✅ Test scrape response:', scrapeResponse.data);\n      \n      setTestResults({\n        environment: envResponse.data,\n        scrape: scrapeResponse.data\n      });\n      \n    } catch (error) {\n      console.error('❌ Environment test failed:', error);\n      \n      let errorMessage = 'Environment test failed.';\n      let errorDetails = '';\n      \n      if (error.response) {\n        console.error('📊 Server test error:', error.response.data);\n        errorMessage = error.response.data.error || errorMessage;\n        \n        if (error.response.data.debug) {\n          errorDetails = `Test Details:\n- Environment: ${error.response.data.debug.environment}\n- Memory Usage: ${Math.round(error.response.data.debug.memoryUsage?.heapUsed / 1024 / 1024)}MB\n- Request ID: ${error.response.data.requestId}\n- Server Time: ${error.response.data.serverTime}ms`;\n        }\n      } else if (error.request) {\n        errorMessage = 'Network error during test. Please check your connection.';\n        errorDetails = `Network Details:\n- Request made to: ${error.config?.url}\n- Method: ${error.config?.method}`;\n      } else {\n        errorMessage = `Test error: ${error.message}`;\n      }\n      \n      setError(`${errorMessage}${errorDetails ? '\\n\\n' + errorDetails : ''}`);\n    } finally {\n      setIsTesting(false);\n    }\n  }, []);\n\n  return (\n    <DownloadListContainer>\n      <DownloadListHeader>Download List</DownloadListHeader>\n      \n      <OptionsSection>\n        <OptionItem>\n          <OptionLabel>Ignore files with no content</OptionLabel>\n          <Toggle\n            type=\"checkbox\"\n            checked={options.ignoreNoContentFile}\n            onChange={(e) => handleOptionChange('ignoreNoContentFile', e.target.checked)}\n          />\n        </OptionItem>\n        <OptionItem>\n          <OptionLabel htmlFor=\"beautifyFile\">Beautify files (HTML, CSS, JS, JSON)</OptionLabel>\n          <Toggle id=\"beautifyFile\" type=\"checkbox\" checked={options.beautifyFile} onChange={e => handleOptionChange('beautifyFile', e.target.checked)} />\n        </OptionItem>\n      </OptionsSection>\n      \n      <UrlInputSection>\n        <UrlInput\n          type=\"url\"\n          placeholder=\"Enter website URL (e.g., https://example.com)\"\n          value={url}\n          onChange={(e) => setUrl(e.target.value)}\n          onKeyPress={(e) => e.key === 'Enter' && handleAddUrl()}\n          disabled={isScraping}\n        />\n        <ButtonGroup>\n          <Button\n            onClick={handleAddUrl}\n            disabled={isScraping || !url.trim()}\n            color=\"primary\"\n          >\n            {isScraping ? (\n              <><Spinner /> Scraping...</>\n            ) : (\n              <><FaPlus /> Add URL</>\n            )}\n          </Button>\n        </ButtonGroup>\n        \n        {error && (\n          <ErrorMessage>\n            <FaExclamationTriangle /> {error}\n          </ErrorMessage>\n        )}\n        \n        {scrapeResult && (\n          <ScrapeReport>\n            <ReportDetails>\n              <DebugTitle>\n                <FaCheckCircle /> Scrape Successful\n              </DebugTitle>\n\n              <DebugItem style={{ marginBottom: '20px' }}>\n                <DebugKey>URL</DebugKey>\n                <DebugValue>{scrapeResult.url}</DebugValue>\n              </DebugItem>\n\n              <DebugGrid>\n                <DebugItem>\n                  <DebugKey>Total Resources</DebugKey>\n                  <DebugValue>{scrapeResult.debug.totalResources}</DebugValue>\n                </DebugItem>\n                <DebugItem>\n                  <DebugKey>Total Size</DebugKey>\n                  <DebugValue>{formatFileSize(scrapeResult.debug.totalSize)}</DebugValue>\n                </DebugItem>\n                <DebugItem>\n                  <DebugKey>Scrape Time</DebugKey>\n                  <DebugValue>{scrapeResult.debug.scrapeTime}ms</DebugValue>\n                </DebugItem>\n                <DebugItem>\n                  <DebugKey>Unique Domains</DebugKey>\n                  <DebugValue>{scrapeResult.debug.uniqueDomains}</DebugValue>\n                </DebugItem>\n              </DebugGrid>\n            </ReportDetails>\n            <ReportActions>\n              <Button\n                onClick={() => handleDownload(scrapeResult)}\n                disabled={isDownloading}\n                color=\"primary\"\n                progress={isDownloading ? downloadProgress : 0}\n              >\n                {isDownloading ? (\n                  `Downloading... ${downloadProgress}%`\n                ) : (\n                  <><FaDownload /> Download</>\n                )}\n              </Button>\n              <Button\n                onClick={() => setScrapeResult(null)} \n                color=\"danger\"\n              >\n                <FaTrash /> Delete\n              </Button>\n            </ReportActions>\n          </ScrapeReport>\n        )}\n      </UrlInputSection>\n      \n      {!scrapeResult && (\n        <EmptyState>\n          No results yet. Enter a URL above to start scraping.\n        </EmptyState>\n        )}\n    </DownloadListContainer>\n  );\n};\n\nexport default DownloadList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}