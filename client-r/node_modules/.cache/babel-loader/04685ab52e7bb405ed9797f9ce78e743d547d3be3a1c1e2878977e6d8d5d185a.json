{"ast":null,"code":"import _taggedTemplateLiteral from\"E:/ResourcesSaverExt/web-scraper-app/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject0,_templateObject1,_templateObject10,_templateObject11,_templateObject12;import React,{useState}from'react';import{useNavigate}from'react-router-dom';import styled from'styled-components';import{FaDownload,FaGlobe,FaCog,FaPlay}from'react-icons/fa';import api from'../../api';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const DashboardContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: 1fr 1fr;\\n  gap: 2rem;\\n  margin-top: 2rem;\\n\\n  @media (max-width: 768px) {\\n    grid-template-columns: 1fr;\\n  }\\n\"])));const Card=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  background: rgba(255, 255, 255, 0.1);\\n  backdrop-filter: blur(10px);\\n  border-radius: 15px;\\n  padding: 2rem;\\n  border: 1px solid rgba(255, 255, 255, 0.2);\\n\"])));const CardTitle=styled.h2(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  color: white;\\n  margin-bottom: 1rem;\\n  display: flex;\\n  align-items: center;\\n  gap: 0.5rem;\\n\"])));const Form=styled.form(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  gap: 1rem;\\n\"])));const InputGroup=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  gap: 0.5rem;\\n\"])));const Label=styled.label(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  color: white;\\n  font-weight: 500;\\n\"])));const Input=styled.input(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  padding: 0.75rem;\\n  border: 1px solid rgba(255, 255, 255, 0.3);\\n  border-radius: 8px;\\n  background: rgba(255, 255, 255, 0.1);\\n  color: white;\\n  font-size: 1rem;\\n  \\n  &::placeholder {\\n    color: rgba(255, 255, 255, 0.7);\\n  }\\n  \\n  &:focus {\\n    border-color: #ffd700;\\n    outline: none;\\n  }\\n\"])));const Select=styled.select(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  padding: 0.75rem;\\n  border: 1px solid rgba(255, 255, 255, 0.3);\\n  border-radius: 8px;\\n  background: rgba(255, 255, 255, 0.1);\\n  color: white;\\n  font-size: 1rem;\\n  \\n  &:focus {\\n    border-color: #ffd700;\\n    outline: none;\\n  }\\n  \\n  option {\\n    background: #333;\\n    color: white;\\n  }\\n\"])));const Button=styled.button(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  padding: 1rem 2rem;\\n  background: linear-gradient(45deg, #ffd700, #ffed4e);\\n  color: #333;\\n  border: none;\\n  border-radius: 8px;\\n  font-size: 1rem;\\n  font-weight: bold;\\n  cursor: pointer;\\n  transition: transform 0.2s ease;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  gap: 0.5rem;\\n  \\n  &:hover {\\n    transform: translateY(-2px);\\n  }\\n  \\n  &:disabled {\\n    opacity: 0.6;\\n    cursor: not-allowed;\\n    transform: none;\\n  }\\n\"])));const ProgressContainer=styled.div(_templateObject0||(_templateObject0=_taggedTemplateLiteral([\"\\n  margin-top: 1rem;\\n\"])));const ProgressBar=styled.div(_templateObject1||(_templateObject1=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 8px;\\n  background: rgba(255, 255, 255, 0.2);\\n  border-radius: 4px;\\n  overflow: hidden;\\n\"])));const ProgressFill=styled.div(_templateObject10||(_templateObject10=_taggedTemplateLiteral([\"\\n  height: 100%;\\n  background: linear-gradient(45deg, #ffd700, #ffed4e);\\n  width: \",\"%;\\n  transition: width 0.3s ease;\\n\"])),props=>props.$progress);const ProgressText=styled.p(_templateObject11||(_templateObject11=_taggedTemplateLiteral([\"\\n  color: white;\\n  margin-top: 0.5rem;\\n  text-align: center;\\n\"])));const StatusMessage=styled.div(_templateObject12||(_templateObject12=_taggedTemplateLiteral([\"\\n  padding: 1rem;\\n  border-radius: 8px;\\n  margin-top: 1rem;\\n  text-align: center;\\n  color: white;\\n  background: \",\";\\n  border: 1px solid \",\";\\n\"])),props=>props.type==='success'?'rgba(76, 175, 80, 0.3)':props.type==='error'?'rgba(244, 67, 54, 0.3)':'rgba(33, 150, 243, 0.3)',props=>props.type==='success'?'rgba(76, 175, 80, 0.5)':props.type==='error'?'rgba(244, 67, 54, 0.5)':'rgba(33, 150, 243, 0.5)');const ScraperDashboard=()=>{const navigate=useNavigate();const[url,setUrl]=useState('');const[scrapingMode,setScrapingMode]=useState('single');const[maxPages,setMaxPages]=useState(10);const[includeAssets,setIncludeAssets]=useState(true);const[isLoading,setIsLoading]=useState(false);const[progress,setProgress]=useState(0);const[status,setStatus]=useState('');const[jobId,setJobId]=useState(null);const handleSubmit=async e=>{e.preventDefault();if(!url){setStatus({type:'error',message:'Please enter a URL'});return;}setIsLoading(true);setProgress(0);setStatus({type:'info',message:'Starting scraping job...'});try{let response;if(scrapingMode==='single'){response=await api.post('/scraper/scrape',{url});setStatus({type:'success',message:'Page scraped successfully!'});// For single page, we can show results immediately\nnavigate(\"/results/\".concat(response.data.jobId));}else{response=await api.post('/scraper/clone',{url,maxPages:parseInt(maxPages),includeAssets});setJobId(response.data.jobId);setStatus({type:'info',message:'Website cloning started. Monitoring progress...'});// Start monitoring progress\nmonitorProgress(response.data.jobId);}}catch(error){var _error$response,_error$response$data;setStatus({type:'error',message:((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'An error occurred while scraping'});}finally{setIsLoading(false);}};const monitorProgress=async jobId=>{const interval=setInterval(async()=>{try{const response=await api.get(\"/scraper/progress/\".concat(jobId));const job=response.data;setProgress(job.progress);if(job.status==='completed'){setStatus({type:'success',message:'Website cloned successfully!'});clearInterval(interval);navigate(\"/results/\".concat(jobId));}else if(job.status==='failed'){setStatus({type:'error',message:\"Cloning failed: \".concat(job.error)});clearInterval(interval);}else{setStatus({type:'info',message:\"Progress: \".concat(job.progress,\"% - \").concat(job.completedPages,\" pages processed\")});}}catch(error){setStatus({type:'error',message:'Error monitoring progress'});clearInterval(interval);}},2000);};return/*#__PURE__*/_jsxs(DashboardContainer,{children:[/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsxs(CardTitle,{children:[/*#__PURE__*/_jsx(FaGlobe,{}),\"Scrape Website\"]}),/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(InputGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Website URL\"}),/*#__PURE__*/_jsx(Input,{type:\"url\",placeholder:\"https://example.com\",value:url,onChange:e=>setUrl(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(InputGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Scraping Mode\"}),/*#__PURE__*/_jsxs(Select,{value:scrapingMode,onChange:e=>setScrapingMode(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"single\",children:\"Single Page\"}),/*#__PURE__*/_jsx(\"option\",{value:\"full\",children:\"Full Website Clone\"})]})]}),scrapingMode==='full'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(InputGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Maximum Pages\"}),/*#__PURE__*/_jsx(Input,{type:\"number\",min:\"1\",max:\"50\",value:maxPages,onChange:e=>setMaxPages(e.target.value)})]}),/*#__PURE__*/_jsx(InputGroup,{children:/*#__PURE__*/_jsxs(Label,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:includeAssets,onChange:e=>setIncludeAssets(e.target.checked),style:{marginRight:'0.5rem'}}),\"Include Assets (CSS, JS, Images)\"]})})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",disabled:isLoading,children:isLoading?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FaCog,{style:{animation:'spin 1s linear infinite'}}),\"Processing...\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FaPlay,{}),\"Start Scraping\"]})})]}),isLoading&&/*#__PURE__*/_jsxs(ProgressContainer,{children:[/*#__PURE__*/_jsx(ProgressBar,{children:/*#__PURE__*/_jsx(ProgressFill,{$progress:progress})}),/*#__PURE__*/_jsxs(ProgressText,{children:[progress,\"% Complete\"]})]}),status&&/*#__PURE__*/_jsx(StatusMessage,{type:status.type,children:status.message})]}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsxs(CardTitle,{children:[/*#__PURE__*/_jsx(FaDownload,{}),\"Features\"]}),/*#__PURE__*/_jsxs(\"div\",{style:{color:'white'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Single Page Scraping\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Extract content, links, images, and assets from a single webpage.\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Full Website Cloning\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Clone entire websites by following internal links and downloading all assets.\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Asset Download\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Download CSS, JavaScript, images, and other resources automatically.\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"ZIP Export\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Download all scraped content as a compressed ZIP file.\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Progress Tracking\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Monitor scraping progress in real-time with detailed status updates.\"})]})]})]});};export default ScraperDashboard;","map":{"version":3,"names":["React","useState","useNavigate","styled","FaDownload","FaGlobe","FaCog","FaPlay","api","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","DashboardContainer","div","_templateObject","_taggedTemplateLiteral","Card","_templateObject2","CardTitle","h2","_templateObject3","Form","form","_templateObject4","InputGroup","_templateObject5","Label","label","_templateObject6","Input","input","_templateObject7","Select","select","_templateObject8","Button","button","_templateObject9","ProgressContainer","_templateObject0","ProgressBar","_templateObject1","ProgressFill","_templateObject10","props","$progress","ProgressText","p","_templateObject11","StatusMessage","_templateObject12","type","ScraperDashboard","navigate","url","setUrl","scrapingMode","setScrapingMode","maxPages","setMaxPages","includeAssets","setIncludeAssets","isLoading","setIsLoading","progress","setProgress","status","setStatus","jobId","setJobId","handleSubmit","e","preventDefault","message","response","post","concat","data","parseInt","monitorProgress","error","_error$response","_error$response$data","interval","setInterval","get","job","clearInterval","completedPages","children","onSubmit","placeholder","value","onChange","target","required","min","max","checked","style","marginRight","disabled","animation","color"],"sources":["E:/ResourcesSaverExt/web-scraper-app/client/src/components/ScraperDashboard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { FaDownload, FaGlobe, FaCog, FaPlay } from 'react-icons/fa';\r\nimport api from '../../api';\r\n\r\nconst DashboardContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 2rem;\r\n  margin-top: 2rem;\r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nconst Card = styled.div`\r\n  background: rgba(255, 255, 255, 0.1);\r\n  backdrop-filter: blur(10px);\r\n  border-radius: 15px;\r\n  padding: 2rem;\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n`;\r\n\r\nconst CardTitle = styled.h2`\r\n  color: white;\r\n  margin-bottom: 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n`;\r\n\r\nconst InputGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  color: white;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 0.75rem;\r\n  border: 1px solid rgba(255, 255, 255, 0.3);\r\n  border-radius: 8px;\r\n  background: rgba(255, 255, 255, 0.1);\r\n  color: white;\r\n  font-size: 1rem;\r\n  \r\n  &::placeholder {\r\n    color: rgba(255, 255, 255, 0.7);\r\n  }\r\n  \r\n  &:focus {\r\n    border-color: #ffd700;\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst Select = styled.select`\r\n  padding: 0.75rem;\r\n  border: 1px solid rgba(255, 255, 255, 0.3);\r\n  border-radius: 8px;\r\n  background: rgba(255, 255, 255, 0.1);\r\n  color: white;\r\n  font-size: 1rem;\r\n  \r\n  &:focus {\r\n    border-color: #ffd700;\r\n    outline: none;\r\n  }\r\n  \r\n  option {\r\n    background: #333;\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 1rem 2rem;\r\n  background: linear-gradient(45deg, #ffd700, #ffed4e);\r\n  color: #333;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: transform 0.2s ease;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 0.5rem;\r\n  \r\n  &:hover {\r\n    transform: translateY(-2px);\r\n  }\r\n  \r\n  &:disabled {\r\n    opacity: 0.6;\r\n    cursor: not-allowed;\r\n    transform: none;\r\n  }\r\n`;\r\n\r\nconst ProgressContainer = styled.div`\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst ProgressBar = styled.div`\r\n  width: 100%;\r\n  height: 8px;\r\n  background: rgba(255, 255, 255, 0.2);\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst ProgressFill = styled.div`\r\n  height: 100%;\r\n  background: linear-gradient(45deg, #ffd700, #ffed4e);\r\n  width: ${props => props.$progress}%;\r\n  transition: width 0.3s ease;\r\n`;\r\n\r\nconst ProgressText = styled.p`\r\n  color: white;\r\n  margin-top: 0.5rem;\r\n  text-align: center;\r\n`;\r\n\r\nconst StatusMessage = styled.div`\r\n  padding: 1rem;\r\n  border-radius: 8px;\r\n  margin-top: 1rem;\r\n  text-align: center;\r\n  color: white;\r\n  background: ${props => \r\n    props.type === 'success' ? 'rgba(76, 175, 80, 0.3)' :\r\n    props.type === 'error' ? 'rgba(244, 67, 54, 0.3)' :\r\n    'rgba(33, 150, 243, 0.3)'\r\n  };\r\n  border: 1px solid ${props => \r\n    props.type === 'success' ? 'rgba(76, 175, 80, 0.5)' :\r\n    props.type === 'error' ? 'rgba(244, 67, 54, 0.5)' :\r\n    'rgba(33, 150, 243, 0.5)'\r\n  };\r\n`;\r\n\r\nconst ScraperDashboard = () => {\r\n  const navigate = useNavigate();\r\n  const [url, setUrl] = useState('');\r\n  const [scrapingMode, setScrapingMode] = useState('single');\r\n  const [maxPages, setMaxPages] = useState(10);\r\n  const [includeAssets, setIncludeAssets] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [status, setStatus] = useState('');\r\n  const [jobId, setJobId] = useState(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!url) {\r\n      setStatus({ type: 'error', message: 'Please enter a URL' });\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setProgress(0);\r\n    setStatus({ type: 'info', message: 'Starting scraping job...' });\r\n\r\n    try {\r\n      let response;\r\n      \r\n      if (scrapingMode === 'single') {\r\n        response = await api.post('/scraper/scrape', { url });\r\n        setStatus({ type: 'success', message: 'Page scraped successfully!' });\r\n        // For single page, we can show results immediately\r\n        navigate(`/results/${response.data.jobId}`);\r\n      } else {\r\n        response = await api.post('/scraper/clone', {\r\n          url,\r\n          maxPages: parseInt(maxPages),\r\n          includeAssets\r\n        });\r\n        \r\n        setJobId(response.data.jobId);\r\n        setStatus({ type: 'info', message: 'Website cloning started. Monitoring progress...' });\r\n        \r\n        // Start monitoring progress\r\n        monitorProgress(response.data.jobId);\r\n      }\r\n    } catch (error) {\r\n      setStatus({ \r\n        type: 'error', \r\n        message: error.response?.data?.error || 'An error occurred while scraping' \r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const monitorProgress = async (jobId) => {\r\n    const interval = setInterval(async () => {\r\n      try {\r\n        const response = await api.get(`/scraper/progress/${jobId}`);\r\n        const job = response.data;\r\n        \r\n        setProgress(job.progress);\r\n        \r\n        if (job.status === 'completed') {\r\n          setStatus({ type: 'success', message: 'Website cloned successfully!' });\r\n          clearInterval(interval);\r\n          navigate(`/results/${jobId}`);\r\n        } else if (job.status === 'failed') {\r\n          setStatus({ type: 'error', message: `Cloning failed: ${job.error}` });\r\n          clearInterval(interval);\r\n        } else {\r\n          setStatus({ \r\n            type: 'info', \r\n            message: `Progress: ${job.progress}% - ${job.completedPages} pages processed` \r\n          });\r\n        }\r\n      } catch (error) {\r\n        setStatus({ type: 'error', message: 'Error monitoring progress' });\r\n        clearInterval(interval);\r\n      }\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <DashboardContainer>\r\n      <Card>\r\n        <CardTitle>\r\n          <FaGlobe />\r\n          Scrape Website\r\n        </CardTitle>\r\n        <Form onSubmit={handleSubmit}>\r\n          <InputGroup>\r\n            <Label>Website URL</Label>\r\n            <Input\r\n              type=\"url\"\r\n              placeholder=\"https://example.com\"\r\n              value={url}\r\n              onChange={(e) => setUrl(e.target.value)}\r\n              required\r\n            />\r\n          </InputGroup>\r\n          \r\n          <InputGroup>\r\n            <Label>Scraping Mode</Label>\r\n            <Select\r\n              value={scrapingMode}\r\n              onChange={(e) => setScrapingMode(e.target.value)}\r\n            >\r\n              <option value=\"single\">Single Page</option>\r\n              <option value=\"full\">Full Website Clone</option>\r\n            </Select>\r\n          </InputGroup>\r\n          \r\n          {scrapingMode === 'full' && (\r\n            <>\r\n              <InputGroup>\r\n                <Label>Maximum Pages</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  min=\"1\"\r\n                  max=\"50\"\r\n                  value={maxPages}\r\n                  onChange={(e) => setMaxPages(e.target.value)}\r\n                />\r\n              </InputGroup>\r\n              \r\n              <InputGroup>\r\n                <Label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={includeAssets}\r\n                    onChange={(e) => setIncludeAssets(e.target.checked)}\r\n                    style={{ marginRight: '0.5rem' }}\r\n                  />\r\n                  Include Assets (CSS, JS, Images)\r\n                </Label>\r\n              </InputGroup>\r\n            </>\r\n          )}\r\n          \r\n          <Button type=\"submit\" disabled={isLoading}>\r\n            {isLoading ? (\r\n              <>\r\n                <FaCog style={{ animation: 'spin 1s linear infinite' }} />\r\n                Processing...\r\n              </>\r\n            ) : (\r\n              <>\r\n                <FaPlay />\r\n                Start Scraping\r\n              </>\r\n            )}\r\n          </Button>\r\n        </Form>\r\n        \r\n        {isLoading && (\r\n          <ProgressContainer>\r\n            <ProgressBar>\r\n              <ProgressFill $progress={progress} />\r\n            </ProgressBar>\r\n            <ProgressText>{progress}% Complete</ProgressText>\r\n          </ProgressContainer>\r\n        )}\r\n        \r\n        {status && (\r\n          <StatusMessage type={status.type}>\r\n            {status.message}\r\n          </StatusMessage>\r\n        )}\r\n      </Card>\r\n      \r\n      <Card>\r\n        <CardTitle>\r\n          <FaDownload />\r\n          Features\r\n        </CardTitle>\r\n        <div style={{ color: 'white' }}>\r\n          <h3>Single Page Scraping</h3>\r\n          <p>Extract content, links, images, and assets from a single webpage.</p>\r\n          \r\n          <h3>Full Website Cloning</h3>\r\n          <p>Clone entire websites by following internal links and downloading all assets.</p>\r\n          \r\n          <h3>Asset Download</h3>\r\n          <p>Download CSS, JavaScript, images, and other resources automatically.</p>\r\n          \r\n          <h3>ZIP Export</h3>\r\n          <p>Download all scraped content as a compressed ZIP file.</p>\r\n          \r\n          <h3>Progress Tracking</h3>\r\n          <p>Monitor scraping progress in real-time with detailed status updates.</p>\r\n        </div>\r\n      </Card>\r\n    </DashboardContainer>\r\n  );\r\n};\r\n\r\nexport default ScraperDashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}