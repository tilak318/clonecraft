{"ast":null,"code":"var _jsxFileName = \"E:\\\\ResourcesSaverExt\\\\web-scraper-app\\\\client\\\\src\\\\components\\\\ScraperDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { FaDownload, FaGlobe, FaCog, FaPlay } from 'react-icons/fa';\nimport api from '../../api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DashboardContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 2rem;\n  margin-top: 2rem;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n_c = DashboardContainer;\nconst Card = styled.div`\n  background: rgba(255, 255, 255, 0.1);\n  backdrop-filter: blur(10px);\n  border-radius: 15px;\n  padding: 2rem;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n`;\n_c2 = Card;\nconst CardTitle = styled.h2`\n  color: white;\n  margin-bottom: 1rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n`;\n_c3 = CardTitle;\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n_c4 = Form;\nconst InputGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n`;\n_c5 = InputGroup;\nconst Label = styled.label`\n  color: white;\n  font-weight: 500;\n`;\n_c6 = Label;\nconst Input = styled.input`\n  padding: 0.75rem;\n  border: 1px solid rgba(255, 255, 255, 0.3);\n  border-radius: 8px;\n  background: rgba(255, 255, 255, 0.1);\n  color: white;\n  font-size: 1rem;\n  \n  &::placeholder {\n    color: rgba(255, 255, 255, 0.7);\n  }\n  \n  &:focus {\n    border-color: #ffd700;\n    outline: none;\n  }\n`;\n_c7 = Input;\nconst Select = styled.select`\n  padding: 0.75rem;\n  border: 1px solid rgba(255, 255, 255, 0.3);\n  border-radius: 8px;\n  background: rgba(255, 255, 255, 0.1);\n  color: white;\n  font-size: 1rem;\n  \n  &:focus {\n    border-color: #ffd700;\n    outline: none;\n  }\n  \n  option {\n    background: #333;\n    color: white;\n  }\n`;\n_c8 = Select;\nconst Button = styled.button`\n  padding: 1rem 2rem;\n  background: linear-gradient(45deg, #ffd700, #ffed4e);\n  color: #333;\n  border: none;\n  border-radius: 8px;\n  font-size: 1rem;\n  font-weight: bold;\n  cursor: pointer;\n  transition: transform 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n  \n  &:hover {\n    transform: translateY(-2px);\n  }\n  \n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n_c9 = Button;\nconst ProgressContainer = styled.div`\n  margin-top: 1rem;\n`;\n_c0 = ProgressContainer;\nconst ProgressBar = styled.div`\n  width: 100%;\n  height: 8px;\n  background: rgba(255, 255, 255, 0.2);\n  border-radius: 4px;\n  overflow: hidden;\n`;\n_c1 = ProgressBar;\nconst ProgressFill = styled.div`\n  height: 100%;\n  background: linear-gradient(45deg, #ffd700, #ffed4e);\n  width: ${props => props.$progress}%;\n  transition: width 0.3s ease;\n`;\n_c10 = ProgressFill;\nconst ProgressText = styled.p`\n  color: white;\n  margin-top: 0.5rem;\n  text-align: center;\n`;\n_c11 = ProgressText;\nconst StatusMessage = styled.div`\n  padding: 1rem;\n  border-radius: 8px;\n  margin-top: 1rem;\n  text-align: center;\n  color: white;\n  background: ${props => props.type === 'success' ? 'rgba(76, 175, 80, 0.3)' : props.type === 'error' ? 'rgba(244, 67, 54, 0.3)' : 'rgba(33, 150, 243, 0.3)'};\n  border: 1px solid ${props => props.type === 'success' ? 'rgba(76, 175, 80, 0.5)' : props.type === 'error' ? 'rgba(244, 67, 54, 0.5)' : 'rgba(33, 150, 243, 0.5)'};\n`;\n_c12 = StatusMessage;\nconst ScraperDashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const [url, setUrl] = useState('');\n  const [scrapingMode, setScrapingMode] = useState('single');\n  const [maxPages, setMaxPages] = useState(10);\n  const [includeAssets, setIncludeAssets] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [status, setStatus] = useState('');\n  const [jobId, setJobId] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!url) {\n      setStatus({\n        type: 'error',\n        message: 'Please enter a URL'\n      });\n      return;\n    }\n    setIsLoading(true);\n    setProgress(0);\n    setStatus({\n      type: 'info',\n      message: 'Starting scraping job...'\n    });\n    try {\n      let response;\n      if (scrapingMode === 'single') {\n        response = await api.post('/scraper/scrape', {\n          url\n        });\n        setStatus({\n          type: 'success',\n          message: 'Page scraped successfully!'\n        });\n        // For single page, we can show results immediately\n        navigate(`/results/${response.data.jobId}`);\n      } else {\n        response = await api.post('/scraper/clone', {\n          url,\n          maxPages: parseInt(maxPages),\n          includeAssets\n        });\n        setJobId(response.data.jobId);\n        setStatus({\n          type: 'info',\n          message: 'Website cloning started. Monitoring progress...'\n        });\n\n        // Start monitoring progress\n        monitorProgress(response.data.jobId);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setStatus({\n        type: 'error',\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'An error occurred while scraping'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const monitorProgress = async jobId => {\n    const interval = setInterval(async () => {\n      try {\n        const response = await api.get(`/scraper/progress/${jobId}`);\n        const job = response.data;\n        setProgress(job.progress);\n        if (job.status === 'completed') {\n          setStatus({\n            type: 'success',\n            message: 'Website cloned successfully!'\n          });\n          clearInterval(interval);\n          navigate(`/results/${jobId}`);\n        } else if (job.status === 'failed') {\n          setStatus({\n            type: 'error',\n            message: `Cloning failed: ${job.error}`\n          });\n          clearInterval(interval);\n        } else {\n          setStatus({\n            type: 'info',\n            message: `Progress: ${job.progress}% - ${job.completedPages} pages processed`\n          });\n        }\n      } catch (error) {\n        setStatus({\n          type: 'error',\n          message: 'Error monitoring progress'\n        });\n        clearInterval(interval);\n      }\n    }, 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(DashboardContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n        children: [/*#__PURE__*/_jsxDEV(FaGlobe, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), \"Scrape Website\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Website URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"url\",\n            placeholder: \"https://example.com\",\n            value: url,\n            onChange: e => setUrl(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Scraping Mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: scrapingMode,\n            onChange: e => setScrapingMode(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"single\",\n              children: \"Single Page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"full\",\n              children: \"Full Website Clone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), scrapingMode === 'full' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: \"Maximum Pages\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"number\",\n              min: \"1\",\n              max: \"50\",\n              value: maxPages,\n              onChange: e => setMaxPages(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            children: /*#__PURE__*/_jsxDEV(Label, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: includeAssets,\n                onChange: e => setIncludeAssets(e.target.checked),\n                style: {\n                  marginRight: '0.5rem'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this), \"Include Assets (CSS, JS, Images)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: isLoading,\n          children: isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(FaCog, {\n              style: {\n                animation: 'spin 1s linear infinite'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this), \"Processing...\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(FaPlay, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this), \"Start Scraping\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(ProgressContainer, {\n        children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n          children: /*#__PURE__*/_jsxDEV(ProgressFill, {\n            $progress: progress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ProgressText, {\n          children: [progress, \"% Complete\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }, this), status && /*#__PURE__*/_jsxDEV(StatusMessage, {\n        type: status.type,\n        children: status.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n        children: [/*#__PURE__*/_jsxDEV(FaDownload, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this), \"Features\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'white'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Single Page Scraping\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Extract content, links, images, and assets from a single webpage.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Full Website Cloning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Clone entire websites by following internal links and downloading all assets.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Asset Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Download CSS, JavaScript, images, and other resources automatically.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"ZIP Export\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Download all scraped content as a compressed ZIP file.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Progress Tracking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Monitor scraping progress in real-time with detailed status updates.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 5\n  }, this);\n};\n_s(ScraperDashboard, \"QIATVVakNOQTzuDP0El0BpqNwDc=\", false, function () {\n  return [useNavigate];\n});\n_c13 = ScraperDashboard;\nexport default ScraperDashboard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13;\n$RefreshReg$(_c, \"DashboardContainer\");\n$RefreshReg$(_c2, \"Card\");\n$RefreshReg$(_c3, \"CardTitle\");\n$RefreshReg$(_c4, \"Form\");\n$RefreshReg$(_c5, \"InputGroup\");\n$RefreshReg$(_c6, \"Label\");\n$RefreshReg$(_c7, \"Input\");\n$RefreshReg$(_c8, \"Select\");\n$RefreshReg$(_c9, \"Button\");\n$RefreshReg$(_c0, \"ProgressContainer\");\n$RefreshReg$(_c1, \"ProgressBar\");\n$RefreshReg$(_c10, \"ProgressFill\");\n$RefreshReg$(_c11, \"ProgressText\");\n$RefreshReg$(_c12, \"StatusMessage\");\n$RefreshReg$(_c13, \"ScraperDashboard\");","map":{"version":3,"names":["React","useState","useNavigate","styled","FaDownload","FaGlobe","FaCog","FaPlay","api","jsxDEV","_jsxDEV","Fragment","_Fragment","DashboardContainer","div","_c","Card","_c2","CardTitle","h2","_c3","Form","form","_c4","InputGroup","_c5","Label","label","_c6","Input","input","_c7","Select","select","_c8","Button","button","_c9","ProgressContainer","_c0","ProgressBar","_c1","ProgressFill","props","$progress","_c10","ProgressText","p","_c11","StatusMessage","type","_c12","ScraperDashboard","_s","navigate","url","setUrl","scrapingMode","setScrapingMode","maxPages","setMaxPages","includeAssets","setIncludeAssets","isLoading","setIsLoading","progress","setProgress","status","setStatus","jobId","setJobId","handleSubmit","e","preventDefault","message","response","post","data","parseInt","monitorProgress","error","_error$response","_error$response$data","interval","setInterval","get","job","clearInterval","completedPages","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","value","onChange","target","required","min","max","checked","style","marginRight","disabled","animation","color","_c13","$RefreshReg$"],"sources":["E:/ResourcesSaverExt/web-scraper-app/client/src/components/ScraperDashboard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { FaDownload, FaGlobe, FaCog, FaPlay } from 'react-icons/fa';\nimport api from '../../api';\n\nconst DashboardContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 2rem;\n  margin-top: 2rem;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst Card = styled.div`\n  background: rgba(255, 255, 255, 0.1);\n  backdrop-filter: blur(10px);\n  border-radius: 15px;\n  padding: 2rem;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n`;\n\nconst CardTitle = styled.h2`\n  color: white;\n  margin-bottom: 1rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\nconst InputGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n`;\n\nconst Label = styled.label`\n  color: white;\n  font-weight: 500;\n`;\n\nconst Input = styled.input`\n  padding: 0.75rem;\n  border: 1px solid rgba(255, 255, 255, 0.3);\n  border-radius: 8px;\n  background: rgba(255, 255, 255, 0.1);\n  color: white;\n  font-size: 1rem;\n  \n  &::placeholder {\n    color: rgba(255, 255, 255, 0.7);\n  }\n  \n  &:focus {\n    border-color: #ffd700;\n    outline: none;\n  }\n`;\n\nconst Select = styled.select`\n  padding: 0.75rem;\n  border: 1px solid rgba(255, 255, 255, 0.3);\n  border-radius: 8px;\n  background: rgba(255, 255, 255, 0.1);\n  color: white;\n  font-size: 1rem;\n  \n  &:focus {\n    border-color: #ffd700;\n    outline: none;\n  }\n  \n  option {\n    background: #333;\n    color: white;\n  }\n`;\n\nconst Button = styled.button`\n  padding: 1rem 2rem;\n  background: linear-gradient(45deg, #ffd700, #ffed4e);\n  color: #333;\n  border: none;\n  border-radius: 8px;\n  font-size: 1rem;\n  font-weight: bold;\n  cursor: pointer;\n  transition: transform 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n  \n  &:hover {\n    transform: translateY(-2px);\n  }\n  \n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n\nconst ProgressContainer = styled.div`\n  margin-top: 1rem;\n`;\n\nconst ProgressBar = styled.div`\n  width: 100%;\n  height: 8px;\n  background: rgba(255, 255, 255, 0.2);\n  border-radius: 4px;\n  overflow: hidden;\n`;\n\nconst ProgressFill = styled.div`\n  height: 100%;\n  background: linear-gradient(45deg, #ffd700, #ffed4e);\n  width: ${props => props.$progress}%;\n  transition: width 0.3s ease;\n`;\n\nconst ProgressText = styled.p`\n  color: white;\n  margin-top: 0.5rem;\n  text-align: center;\n`;\n\nconst StatusMessage = styled.div`\n  padding: 1rem;\n  border-radius: 8px;\n  margin-top: 1rem;\n  text-align: center;\n  color: white;\n  background: ${props => \n    props.type === 'success' ? 'rgba(76, 175, 80, 0.3)' :\n    props.type === 'error' ? 'rgba(244, 67, 54, 0.3)' :\n    'rgba(33, 150, 243, 0.3)'\n  };\n  border: 1px solid ${props => \n    props.type === 'success' ? 'rgba(76, 175, 80, 0.5)' :\n    props.type === 'error' ? 'rgba(244, 67, 54, 0.5)' :\n    'rgba(33, 150, 243, 0.5)'\n  };\n`;\n\nconst ScraperDashboard = () => {\n  const navigate = useNavigate();\n  const [url, setUrl] = useState('');\n  const [scrapingMode, setScrapingMode] = useState('single');\n  const [maxPages, setMaxPages] = useState(10);\n  const [includeAssets, setIncludeAssets] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [status, setStatus] = useState('');\n  const [jobId, setJobId] = useState(null);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!url) {\n      setStatus({ type: 'error', message: 'Please enter a URL' });\n      return;\n    }\n\n    setIsLoading(true);\n    setProgress(0);\n    setStatus({ type: 'info', message: 'Starting scraping job...' });\n\n    try {\n      let response;\n      \n      if (scrapingMode === 'single') {\n        response = await api.post('/scraper/scrape', { url });\n        setStatus({ type: 'success', message: 'Page scraped successfully!' });\n        // For single page, we can show results immediately\n        navigate(`/results/${response.data.jobId}`);\n      } else {\n        response = await api.post('/scraper/clone', {\n          url,\n          maxPages: parseInt(maxPages),\n          includeAssets\n        });\n        \n        setJobId(response.data.jobId);\n        setStatus({ type: 'info', message: 'Website cloning started. Monitoring progress...' });\n        \n        // Start monitoring progress\n        monitorProgress(response.data.jobId);\n      }\n    } catch (error) {\n      setStatus({ \n        type: 'error', \n        message: error.response?.data?.error || 'An error occurred while scraping' \n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const monitorProgress = async (jobId) => {\n    const interval = setInterval(async () => {\n      try {\n        const response = await api.get(`/scraper/progress/${jobId}`);\n        const job = response.data;\n        \n        setProgress(job.progress);\n        \n        if (job.status === 'completed') {\n          setStatus({ type: 'success', message: 'Website cloned successfully!' });\n          clearInterval(interval);\n          navigate(`/results/${jobId}`);\n        } else if (job.status === 'failed') {\n          setStatus({ type: 'error', message: `Cloning failed: ${job.error}` });\n          clearInterval(interval);\n        } else {\n          setStatus({ \n            type: 'info', \n            message: `Progress: ${job.progress}% - ${job.completedPages} pages processed` \n          });\n        }\n      } catch (error) {\n        setStatus({ type: 'error', message: 'Error monitoring progress' });\n        clearInterval(interval);\n      }\n    }, 2000);\n  };\n\n  return (\n    <DashboardContainer>\n      <Card>\n        <CardTitle>\n          <FaGlobe />\n          Scrape Website\n        </CardTitle>\n        <Form onSubmit={handleSubmit}>\n          <InputGroup>\n            <Label>Website URL</Label>\n            <Input\n              type=\"url\"\n              placeholder=\"https://example.com\"\n              value={url}\n              onChange={(e) => setUrl(e.target.value)}\n              required\n            />\n          </InputGroup>\n          \n          <InputGroup>\n            <Label>Scraping Mode</Label>\n            <Select\n              value={scrapingMode}\n              onChange={(e) => setScrapingMode(e.target.value)}\n            >\n              <option value=\"single\">Single Page</option>\n              <option value=\"full\">Full Website Clone</option>\n            </Select>\n          </InputGroup>\n          \n          {scrapingMode === 'full' && (\n            <>\n              <InputGroup>\n                <Label>Maximum Pages</Label>\n                <Input\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"50\"\n                  value={maxPages}\n                  onChange={(e) => setMaxPages(e.target.value)}\n                />\n              </InputGroup>\n              \n              <InputGroup>\n                <Label>\n                  <input\n                    type=\"checkbox\"\n                    checked={includeAssets}\n                    onChange={(e) => setIncludeAssets(e.target.checked)}\n                    style={{ marginRight: '0.5rem' }}\n                  />\n                  Include Assets (CSS, JS, Images)\n                </Label>\n              </InputGroup>\n            </>\n          )}\n          \n          <Button type=\"submit\" disabled={isLoading}>\n            {isLoading ? (\n              <>\n                <FaCog style={{ animation: 'spin 1s linear infinite' }} />\n                Processing...\n              </>\n            ) : (\n              <>\n                <FaPlay />\n                Start Scraping\n              </>\n            )}\n          </Button>\n        </Form>\n        \n        {isLoading && (\n          <ProgressContainer>\n            <ProgressBar>\n              <ProgressFill $progress={progress} />\n            </ProgressBar>\n            <ProgressText>{progress}% Complete</ProgressText>\n          </ProgressContainer>\n        )}\n        \n        {status && (\n          <StatusMessage type={status.type}>\n            {status.message}\n          </StatusMessage>\n        )}\n      </Card>\n      \n      <Card>\n        <CardTitle>\n          <FaDownload />\n          Features\n        </CardTitle>\n        <div style={{ color: 'white' }}>\n          <h3>Single Page Scraping</h3>\n          <p>Extract content, links, images, and assets from a single webpage.</p>\n          \n          <h3>Full Website Cloning</h3>\n          <p>Clone entire websites by following internal links and downloading all assets.</p>\n          \n          <h3>Asset Download</h3>\n          <p>Download CSS, JavaScript, images, and other resources automatically.</p>\n          \n          <h3>ZIP Export</h3>\n          <p>Download all scraped content as a compressed ZIP file.</p>\n          \n          <h3>Progress Tracking</h3>\n          <p>Monitor scraping progress in real-time with detailed status updates.</p>\n        </div>\n      </Card>\n    </DashboardContainer>\n  );\n};\n\nexport default ScraperDashboard; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,UAAU,EAAEC,OAAO,EAAEC,KAAK,EAAEC,MAAM,QAAQ,gBAAgB;AACnE,OAAOC,GAAG,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5B,MAAMC,kBAAkB,GAAGV,MAAM,CAACW,GAAG;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GATIF,kBAAkB;AAWxB,MAAMG,IAAI,GAAGb,MAAM,CAACW,GAAG;AACvB;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GANID,IAAI;AAQV,MAAME,SAAS,GAAGf,MAAM,CAACgB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GANIF,SAAS;AAQf,MAAMG,IAAI,GAAGlB,MAAM,CAACmB,IAAI;AACxB;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJIF,IAAI;AAMV,MAAMG,UAAU,GAAGrB,MAAM,CAACW,GAAG;AAC7B;AACA;AACA;AACA,CAAC;AAACW,GAAA,GAJID,UAAU;AAMhB,MAAME,KAAK,GAAGvB,MAAM,CAACwB,KAAK;AAC1B;AACA;AACA,CAAC;AAACC,GAAA,GAHIF,KAAK;AAKX,MAAMG,KAAK,GAAG1B,MAAM,CAAC2B,KAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAhBIF,KAAK;AAkBX,MAAMG,MAAM,GAAG7B,MAAM,CAAC8B,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAjBIF,MAAM;AAmBZ,MAAMG,MAAM,GAAGhC,MAAM,CAACiC,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAxBIF,MAAM;AA0BZ,MAAMG,iBAAiB,GAAGnC,MAAM,CAACW,GAAG;AACpC;AACA,CAAC;AAACyB,GAAA,GAFID,iBAAiB;AAIvB,MAAME,WAAW,GAAGrC,MAAM,CAACW,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC2B,GAAA,GANID,WAAW;AAQjB,MAAME,YAAY,GAAGvC,MAAM,CAACW,GAAG;AAC/B;AACA;AACA,WAAW6B,KAAK,IAAIA,KAAK,CAACC,SAAS;AACnC;AACA,CAAC;AAACC,IAAA,GALIH,YAAY;AAOlB,MAAMI,YAAY,GAAG3C,MAAM,CAAC4C,CAAC;AAC7B;AACA;AACA;AACA,CAAC;AAACC,IAAA,GAJIF,YAAY;AAMlB,MAAMG,aAAa,GAAG9C,MAAM,CAACW,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA,gBAAgB6B,KAAK,IACjBA,KAAK,CAACO,IAAI,KAAK,SAAS,GAAG,wBAAwB,GACnDP,KAAK,CAACO,IAAI,KAAK,OAAO,GAAG,wBAAwB,GACjD,yBAAyB;AAC7B,sBACsBP,KAAK,IACvBA,KAAK,CAACO,IAAI,KAAK,SAAS,GAAG,wBAAwB,GACnDP,KAAK,CAACO,IAAI,KAAK,OAAO,GAAG,wBAAwB,GACjD,yBAAyB;AAC7B,CACC;AAACC,IAAA,GAhBIF,aAAa;AAkBnB,MAAMG,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,QAAQ,GAAGpD,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACqD,GAAG,EAAEC,MAAM,CAAC,GAAGvD,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACwD,YAAY,EAAEC,eAAe,CAAC,GAAGzD,QAAQ,CAAC,QAAQ,CAAC;EAC1D,MAAM,CAAC0D,QAAQ,EAAEC,WAAW,CAAC,GAAG3D,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC4D,aAAa,EAAEC,gBAAgB,CAAC,GAAG7D,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAAC8D,SAAS,EAAEC,YAAY,CAAC,GAAG/D,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACgE,QAAQ,EAAEC,WAAW,CAAC,GAAGjE,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACkE,MAAM,EAAEC,SAAS,CAAC,GAAGnE,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACoE,KAAK,EAAEC,QAAQ,CAAC,GAAGrE,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMsE,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAAClB,GAAG,EAAE;MACRa,SAAS,CAAC;QAAElB,IAAI,EAAE,OAAO;QAAEwB,OAAO,EAAE;MAAqB,CAAC,CAAC;MAC3D;IACF;IAEAV,YAAY,CAAC,IAAI,CAAC;IAClBE,WAAW,CAAC,CAAC,CAAC;IACdE,SAAS,CAAC;MAAElB,IAAI,EAAE,MAAM;MAAEwB,OAAO,EAAE;IAA2B,CAAC,CAAC;IAEhE,IAAI;MACF,IAAIC,QAAQ;MAEZ,IAAIlB,YAAY,KAAK,QAAQ,EAAE;QAC7BkB,QAAQ,GAAG,MAAMnE,GAAG,CAACoE,IAAI,CAAC,iBAAiB,EAAE;UAAErB;QAAI,CAAC,CAAC;QACrDa,SAAS,CAAC;UAAElB,IAAI,EAAE,SAAS;UAAEwB,OAAO,EAAE;QAA6B,CAAC,CAAC;QACrE;QACApB,QAAQ,CAAC,YAAYqB,QAAQ,CAACE,IAAI,CAACR,KAAK,EAAE,CAAC;MAC7C,CAAC,MAAM;QACLM,QAAQ,GAAG,MAAMnE,GAAG,CAACoE,IAAI,CAAC,gBAAgB,EAAE;UAC1CrB,GAAG;UACHI,QAAQ,EAAEmB,QAAQ,CAACnB,QAAQ,CAAC;UAC5BE;QACF,CAAC,CAAC;QAEFS,QAAQ,CAACK,QAAQ,CAACE,IAAI,CAACR,KAAK,CAAC;QAC7BD,SAAS,CAAC;UAAElB,IAAI,EAAE,MAAM;UAAEwB,OAAO,EAAE;QAAkD,CAAC,CAAC;;QAEvF;QACAK,eAAe,CAACJ,QAAQ,CAACE,IAAI,CAACR,KAAK,CAAC;MACtC;IACF,CAAC,CAAC,OAAOW,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACdd,SAAS,CAAC;QACRlB,IAAI,EAAE,OAAO;QACbwB,OAAO,EAAE,EAAAO,eAAA,GAAAD,KAAK,CAACL,QAAQ,cAAAM,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBJ,IAAI,cAAAK,oBAAA,uBAApBA,oBAAA,CAAsBF,KAAK,KAAI;MAC1C,CAAC,CAAC;IACJ,CAAC,SAAS;MACRhB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMe,eAAe,GAAG,MAAOV,KAAK,IAAK;IACvC,MAAMc,QAAQ,GAAGC,WAAW,CAAC,YAAY;MACvC,IAAI;QACF,MAAMT,QAAQ,GAAG,MAAMnE,GAAG,CAAC6E,GAAG,CAAC,qBAAqBhB,KAAK,EAAE,CAAC;QAC5D,MAAMiB,GAAG,GAAGX,QAAQ,CAACE,IAAI;QAEzBX,WAAW,CAACoB,GAAG,CAACrB,QAAQ,CAAC;QAEzB,IAAIqB,GAAG,CAACnB,MAAM,KAAK,WAAW,EAAE;UAC9BC,SAAS,CAAC;YAAElB,IAAI,EAAE,SAAS;YAAEwB,OAAO,EAAE;UAA+B,CAAC,CAAC;UACvEa,aAAa,CAACJ,QAAQ,CAAC;UACvB7B,QAAQ,CAAC,YAAYe,KAAK,EAAE,CAAC;QAC/B,CAAC,MAAM,IAAIiB,GAAG,CAACnB,MAAM,KAAK,QAAQ,EAAE;UAClCC,SAAS,CAAC;YAAElB,IAAI,EAAE,OAAO;YAAEwB,OAAO,EAAE,mBAAmBY,GAAG,CAACN,KAAK;UAAG,CAAC,CAAC;UACrEO,aAAa,CAACJ,QAAQ,CAAC;QACzB,CAAC,MAAM;UACLf,SAAS,CAAC;YACRlB,IAAI,EAAE,MAAM;YACZwB,OAAO,EAAE,aAAaY,GAAG,CAACrB,QAAQ,OAAOqB,GAAG,CAACE,cAAc;UAC7D,CAAC,CAAC;QACJ;MACF,CAAC,CAAC,OAAOR,KAAK,EAAE;QACdZ,SAAS,CAAC;UAAElB,IAAI,EAAE,OAAO;UAAEwB,OAAO,EAAE;QAA4B,CAAC,CAAC;QAClEa,aAAa,CAACJ,QAAQ,CAAC;MACzB;IACF,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,oBACEzE,OAAA,CAACG,kBAAkB;IAAA4E,QAAA,gBACjB/E,OAAA,CAACM,IAAI;MAAAyE,QAAA,gBACH/E,OAAA,CAACQ,SAAS;QAAAuE,QAAA,gBACR/E,OAAA,CAACL,OAAO;UAAAqF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,kBAEb;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC,eACZnF,OAAA,CAACW,IAAI;QAACyE,QAAQ,EAAEvB,YAAa;QAAAkB,QAAA,gBAC3B/E,OAAA,CAACc,UAAU;UAAAiE,QAAA,gBACT/E,OAAA,CAACgB,KAAK;YAAA+D,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC1BnF,OAAA,CAACmB,KAAK;YACJqB,IAAI,EAAC,KAAK;YACV6C,WAAW,EAAC,qBAAqB;YACjCC,KAAK,EAAEzC,GAAI;YACX0C,QAAQ,EAAGzB,CAAC,IAAKhB,MAAM,CAACgB,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAE;YACxCG,QAAQ;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACQ,CAAC,eAEbnF,OAAA,CAACc,UAAU;UAAAiE,QAAA,gBACT/E,OAAA,CAACgB,KAAK;YAAA+D,QAAA,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC5BnF,OAAA,CAACsB,MAAM;YACLgE,KAAK,EAAEvC,YAAa;YACpBwC,QAAQ,EAAGzB,CAAC,IAAKd,eAAe,CAACc,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAE;YAAAP,QAAA,gBAEjD/E,OAAA;cAAQsF,KAAK,EAAC,QAAQ;cAAAP,QAAA,EAAC;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC3CnF,OAAA;cAAQsF,KAAK,EAAC,MAAM;cAAAP,QAAA,EAAC;YAAkB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,EAEZpC,YAAY,KAAK,MAAM,iBACtB/C,OAAA,CAAAE,SAAA;UAAA6E,QAAA,gBACE/E,OAAA,CAACc,UAAU;YAAAiE,QAAA,gBACT/E,OAAA,CAACgB,KAAK;cAAA+D,QAAA,EAAC;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC5BnF,OAAA,CAACmB,KAAK;cACJqB,IAAI,EAAC,QAAQ;cACbkD,GAAG,EAAC,GAAG;cACPC,GAAG,EAAC,IAAI;cACRL,KAAK,EAAErC,QAAS;cAChBsC,QAAQ,EAAGzB,CAAC,IAAKZ,WAAW,CAACY,CAAC,CAAC0B,MAAM,CAACF,KAAK;YAAE;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACQ,CAAC,eAEbnF,OAAA,CAACc,UAAU;YAAAiE,QAAA,eACT/E,OAAA,CAACgB,KAAK;cAAA+D,QAAA,gBACJ/E,OAAA;gBACEwC,IAAI,EAAC,UAAU;gBACfoD,OAAO,EAAEzC,aAAc;gBACvBoC,QAAQ,EAAGzB,CAAC,IAAKV,gBAAgB,CAACU,CAAC,CAAC0B,MAAM,CAACI,OAAO,CAAE;gBACpDC,KAAK,EAAE;kBAAEC,WAAW,EAAE;gBAAS;cAAE;gBAAAd,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClC,CAAC,oCAEJ;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA,eACb,CACH,eAEDnF,OAAA,CAACyB,MAAM;UAACe,IAAI,EAAC,QAAQ;UAACuD,QAAQ,EAAE1C,SAAU;UAAA0B,QAAA,EACvC1B,SAAS,gBACRrD,OAAA,CAAAE,SAAA;YAAA6E,QAAA,gBACE/E,OAAA,CAACJ,KAAK;cAACiG,KAAK,EAAE;gBAAEG,SAAS,EAAE;cAA0B;YAAE;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,iBAE5D;UAAA,eAAE,CAAC,gBAEHnF,OAAA,CAAAE,SAAA;YAAA6E,QAAA,gBACE/E,OAAA,CAACH,MAAM;cAAAmF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,kBAEZ;UAAA,eAAE;QACH;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,EAEN9B,SAAS,iBACRrD,OAAA,CAAC4B,iBAAiB;QAAAmD,QAAA,gBAChB/E,OAAA,CAAC8B,WAAW;UAAAiD,QAAA,eACV/E,OAAA,CAACgC,YAAY;YAACE,SAAS,EAAEqB;UAAS;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B,CAAC,eACdnF,OAAA,CAACoC,YAAY;UAAA2C,QAAA,GAAExB,QAAQ,EAAC,YAAU;QAAA;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CACpB,EAEA1B,MAAM,iBACLzD,OAAA,CAACuC,aAAa;QAACC,IAAI,EAAEiB,MAAM,CAACjB,IAAK;QAAAuC,QAAA,EAC9BtB,MAAM,CAACO;MAAO;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAChB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eAEPnF,OAAA,CAACM,IAAI;MAAAyE,QAAA,gBACH/E,OAAA,CAACQ,SAAS;QAAAuE,QAAA,gBACR/E,OAAA,CAACN,UAAU;UAAAsF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,YAEhB;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC,eACZnF,OAAA;QAAK6F,KAAK,EAAE;UAAEI,KAAK,EAAE;QAAQ,CAAE;QAAAlB,QAAA,gBAC7B/E,OAAA;UAAA+E,QAAA,EAAI;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7BnF,OAAA;UAAA+E,QAAA,EAAG;QAAiE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAExEnF,OAAA;UAAA+E,QAAA,EAAI;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7BnF,OAAA;UAAA+E,QAAA,EAAG;QAA6E;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAEpFnF,OAAA;UAAA+E,QAAA,EAAI;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvBnF,OAAA;UAAA+E,QAAA,EAAG;QAAoE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAE3EnF,OAAA;UAAA+E,QAAA,EAAI;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnBnF,OAAA;UAAA+E,QAAA,EAAG;QAAsD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAE7DnF,OAAA;UAAA+E,QAAA,EAAI;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1BnF,OAAA;UAAA+E,QAAA,EAAG;QAAoE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEzB,CAAC;AAACxC,EAAA,CAlMID,gBAAgB;EAAA,QACHlD,WAAW;AAAA;AAAA0G,IAAA,GADxBxD,gBAAgB;AAoMtB,eAAeA,gBAAgB;AAAC,IAAArC,EAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAI,IAAA,EAAAG,IAAA,EAAAG,IAAA,EAAAyD,IAAA;AAAAC,YAAA,CAAA9F,EAAA;AAAA8F,YAAA,CAAA5F,GAAA;AAAA4F,YAAA,CAAAzF,GAAA;AAAAyF,YAAA,CAAAtF,GAAA;AAAAsF,YAAA,CAAApF,GAAA;AAAAoF,YAAA,CAAAjF,GAAA;AAAAiF,YAAA,CAAA9E,GAAA;AAAA8E,YAAA,CAAA3E,GAAA;AAAA2E,YAAA,CAAAxE,GAAA;AAAAwE,YAAA,CAAAtE,GAAA;AAAAsE,YAAA,CAAApE,GAAA;AAAAoE,YAAA,CAAAhE,IAAA;AAAAgE,YAAA,CAAA7D,IAAA;AAAA6D,YAAA,CAAA1D,IAAA;AAAA0D,YAAA,CAAAD,IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}